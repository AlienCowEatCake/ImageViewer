diff -Nur LibRaw-0.20.2_orig/src/decoders/crx.cpp LibRaw-0.20.2/src/decoders/crx.cpp
--- LibRaw-0.20.2_orig/src/decoders/crx.cpp	2020-10-15 12:06:07.000000000 +0700
+++ LibRaw-0.20.2/src/decoders/crx.cpp	2020-11-29 03:57:07.776453899 +0700
@@ -39,7 +39,9 @@
 #define CRX_BUF_SIZE 0x10000
 #if !defined(_WIN32) || (defined (__GNUC__) && !defined(__INTRINSIC_SPECIAL__BitScanReverse))  
 /* __INTRINSIC_SPECIAL__BitScanReverse found in MinGW32-W64 v7.30 headers, may be there is a better solution? */
+#if !defined(_WIN32)
 typedef uint32_t DWORD;
+#endif
 libraw_inline void _BitScanReverse(DWORD *Index, unsigned long Mask)
 {
   *Index = sizeof(unsigned long) * 8 - 1 - __builtin_clzl(Mask);
@@ -47,7 +49,7 @@
 #if LibRawBigEndian
 #define _byteswap_ulong(x) (x)
 #else
-#define _byteswap_ulong(x) __builtin_bswap32(x)
+#define _byteswap_ulong(x) ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >>  8) | (((x) & 0x0000ff00) <<  8) | (((x) & 0x000000ff) << 24))
 #endif
 #endif
 
diff -Nur LibRaw-0.20.2_orig/src/metadata/tiff.cpp LibRaw-0.20.2/src/metadata/tiff.cpp
--- LibRaw-0.20.2_orig/src/metadata/tiff.cpp	2020-10-15 12:06:07.000000000 +0700
+++ LibRaw-0.20.2/src/metadata/tiff.cpp	2020-11-29 03:57:07.776453899 +0700
@@ -241,10 +241,10 @@
         }
         break;
       case 0x1202:
-        if (ilm.LensID != 0xffffffffffffffff) {
+        if (ilm.LensID != 0xffffffffffffffffULL) {
           utmp = (fgetc(ifp) << 8) | fgetc(ifp);
           if (utmp) ilm.LensID += utmp;
-          else ilm.LensID = 0xffffffffffffffff;
+          else ilm.LensID = 0xffffffffffffffffULL;
         }
         break;
       case 0x1203: /* 4611, FocalLengthIn35mmFormat, contained in 0x0120
diff -Nur LibRaw-0.20.2_orig/src/utils/utils_libraw.cpp LibRaw-0.20.2/src/utils/utils_libraw.cpp
--- LibRaw-0.20.2_orig/src/utils/utils_libraw.cpp	2020-10-15 12:06:07.000000000 +0700
+++ LibRaw-0.20.2/src/utils/utils_libraw.cpp	2020-11-29 03:57:07.776453899 +0700
@@ -291,6 +291,8 @@
 {
 #ifdef _MSC_VER
   InterlockedExchange(&_exitflag, 0);
+#elif defined (__GNUC__) && (__GNUC__ < 4) && defined (LIBRAW_NOTHREADS)
+  _exitflag = 0;
 #else
   __sync_fetch_and_and(&_exitflag, 0);
 #endif
@@ -308,6 +310,8 @@
 {
 #ifdef _MSC_VER
   InterlockedExchange(&_exitflag, 1);
+#elif defined (__GNUC__) && (__GNUC__ < 4) && defined (LIBRAW_NOTHREADS)
+  ++_exitflag;
 #else
   __sync_fetch_and_add(&_exitflag, 1);
 #endif
@@ -326,6 +330,11 @@
 #ifdef _MSC_VER
   if (InterlockedExchange(&_exitflag, 0))
     throw LIBRAW_EXCEPTION_CANCELLED_BY_CALLBACK;
+#elif defined (__GNUC__) && (__GNUC__ < 4) && defined (LIBRAW_NOTHREADS)
+  long exitflag = 0;
+  std::swap(exitflag, _exitflag);
+  if (exitflag)
+    throw LIBRAW_EXCEPTION_CANCELLED_BY_CALLBACK;
 #else
   if (__sync_fetch_and_and(&_exitflag, 0))
     throw LIBRAW_EXCEPTION_CANCELLED_BY_CALLBACK;
