From f8c7b467c37d433b93de8b0bc5db66d29ff0f2cc Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Sun, 28 Nov 2021 20:17:26 +0700
Subject: [PATCH 1/3] Fix launch on Win98

---
 src/libraw_datastream.cpp | 35 ++++++++++++++++++++++++++++++++---
 1 file changed, 32 insertions(+), 3 deletions(-)

diff --git a/src/libraw_datastream.cpp b/src/libraw_datastream.cpp
index 60593b42..358ba5bf 100644
--- a/src/libraw_datastream.cpp
+++ b/src/libraw_datastream.cpp
@@ -702,6 +702,35 @@ LibRaw_windows_datastream::~LibRaw_windows_datastream()
     ::CloseHandle(hMap_);
 }
 
+static BOOL GetFileSizeEx_Legacy(HANDLE hFile, PLARGE_INTEGER lpFileSize)
+{
+  if (lpFileSize == NULL)
+    return FALSE;
+
+  HMODULE hKernel32 = ::LoadLibraryA("kernel32.dll");
+  typedef BOOL(WINAPI *GetFileSizeEx_t)(HANDLE, PLARGE_INTEGER);
+  GetFileSizeEx_t GetFileSizeEx_f = reinterpret_cast<GetFileSizeEx_t>(::GetProcAddress(hKernel32, "GetFileSizeEx"));
+
+  BOOL fileSizeStatus = FALSE;
+  if (GetFileSizeEx_f)
+  {
+    fileSizeStatus = GetFileSizeEx_f(hFile, lpFileSize);
+  }
+  else
+  {
+    DWORD dwSizeHigh = 0, dwSizeLow = 0;
+    dwSizeLow = ::GetFileSize(hFile, &dwSizeHigh);
+    if((dwSizeLow != INVALID_FILE_SIZE) || (dwSizeLow == INVALID_FILE_SIZE && ::GetLastError() != NO_ERROR))
+    {
+      lpFileSize->HighPart = dwSizeHigh;
+      lpFileSize->LowPart = dwSizeLow;
+    }
+  }
+
+  ::FreeLibrary(hKernel32);
+  return fileSizeStatus;
+}
+
 void LibRaw_windows_datastream::Open(HANDLE hFile)
 {
   // create a file mapping handle on the file handle
@@ -710,7 +739,7 @@ void LibRaw_windows_datastream::Open(HANDLE hFile)
     throw std::runtime_error("failed to create file mapping");
 
   // now map the whole file base view
-  if (!::GetFileSizeEx(hFile, (PLARGE_INTEGER)&cbView_))
+  if (!GetFileSizeEx_Legacy(hFile, (PLARGE_INTEGER)&cbView_))
     throw std::runtime_error("failed to get the file size");
 
   pView_ = ::MapViewOfFile(hMap_, FILE_MAP_READ, 0, 0, (size_t)cbView_);
@@ -762,7 +791,7 @@ LibRaw_bigfile_buffered_datastream::LibRaw_bigfile_buffered_datastream(const cha
 #endif
         {
             LARGE_INTEGER fs;
-            if (GetFileSizeEx(fhandle, &fs))
+            if (GetFileSizeEx_Legacy(fhandle, &fs))
                 _fsize = fs.QuadPart;
         }
     }
@@ -788,7 +817,7 @@ LibRaw_bigfile_buffered_datastream::LibRaw_bigfile_buffered_datastream(const wch
 #endif
         {
             LARGE_INTEGER fs;
-            if (GetFileSizeEx(fhandle, &fs))
+            if (GetFileSizeEx_Legacy(fhandle, &fs))
                 _fsize = fs.QuadPart;
         }
 
-- 
2.39.2

