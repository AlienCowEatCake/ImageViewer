From 7010f37e570636f82fec846dd665d0b8cfaa216f Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Sun, 25 Aug 2024 23:21:25 +0700
Subject: [PATCH] Fix build with MinGW 3.4.2

---
 include/libyuv/row.h    | 9 +++++++++
 source/mjpeg_decoder.cc | 2 +-
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/include/libyuv/row.h b/include/libyuv/row.h
index 1eda17ad..47b9adb9 100644
--- a/include/libyuv/row.h
+++ b/include/libyuv/row.h
@@ -913,12 +913,21 @@ typedef int8_t __attribute__((vector_size(16))) vec8;
 typedef uint16_t __attribute__((vector_size(16))) uvec16;
 typedef uint32_t __attribute__((vector_size(16))) uvec32;
 typedef uint8_t __attribute__((vector_size(16))) uvec8;
+#if (defined(__GNUC__) && !defined(__clang__) && (__GNUC__ < 4))
+typedef int16_t __attribute__((aligned(32))) lvec16[16];
+typedef int32_t __attribute__((aligned(32))) lvec32[8];
+typedef int8_t __attribute__((aligned(32))) lvec8[32];
+typedef uint16_t __attribute__((aligned(32))) ulvec16[16];
+typedef uint32_t __attribute__((aligned(32))) ulvec32[8];
+typedef uint8_t __attribute__((aligned(32))) ulvec8[32];
+#else
 typedef int16_t __attribute__((vector_size(32))) lvec16;
 typedef int32_t __attribute__((vector_size(32))) lvec32;
 typedef int8_t __attribute__((vector_size(32))) lvec8;
 typedef uint16_t __attribute__((vector_size(32))) ulvec16;
 typedef uint32_t __attribute__((vector_size(32))) ulvec32;
 typedef uint8_t __attribute__((vector_size(32))) ulvec8;
+#endif
 #else
 #define SIMD_ALIGNED(var) var
 #define LIBYUV_NOINLINE
diff --git a/source/mjpeg_decoder.cc b/source/mjpeg_decoder.cc
index b93a8499..3fad3ff1 100644
--- a/source/mjpeg_decoder.cc
+++ b/source/mjpeg_decoder.cc
@@ -429,7 +429,7 @@ void skip_input_data(j_decompress_ptr cinfo, long num_bytes) {  // NOLINT
   jpeg_source_mgr* src = cinfo->src;
   size_t bytes = (size_t)num_bytes;
   if (bytes > src->bytes_in_buffer) {
-    src->next_input_byte = nullptr;
+    src->next_input_byte = NULL;
     src->bytes_in_buffer = 0;
   } else {
     src->next_input_byte += bytes;
-- 
2.47.0

