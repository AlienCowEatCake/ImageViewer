From d02eaf5fc9e0b7a64f812f6f5cbb2dabeba1e7eb Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Sun, 14 May 2017 23:12:38 +0700
Subject: [PATCH 2/4] Dont use modern options with old Qt verson

---
 src/plugins/imageformats/dds/qddshandler.cpp   | 7 ++++++-
 src/plugins/imageformats/jp2/qjp2handler.cpp   | 7 +++++++
 src/plugins/imageformats/webp/qwebphandler.cpp | 4 ++++
 3 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/src/plugins/imageformats/dds/qddshandler.cpp b/src/plugins/imageformats/dds/qddshandler.cpp
index 3a44b51..dab69d5 100644
--- a/src/plugins/imageformats/dds/qddshandler.cpp
+++ b/src/plugins/imageformats/dds/qddshandler.cpp
@@ -1489,8 +1489,10 @@ QVariant QDDSHandler::option(QImageIOHandler::ImageOption option) const
         return QSize(m_header.width, m_header.height);
     case QImageIOHandler::SubType:
         return formatName(m_format);
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
     case QImageIOHandler::SupportedSubTypes:
         return QVariant::fromValue(QList<QByteArray>() << formatName(FormatA8R8G8B8));
+#endif
     default:
         break;
     }
@@ -1512,7 +1514,10 @@ bool QDDSHandler::supportsOption(QImageIOHandler::ImageOption option) const
 {
     return (option == QImageIOHandler::Size)
             || (option == QImageIOHandler::SubType)
-            || (option == QImageIOHandler::SupportedSubTypes);
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 4, 0))
+            || (option == QImageIOHandler::SupportedSubTypes)
+#endif
+            ;
 }
 
 int QDDSHandler::imageCount() const
diff --git a/src/plugins/imageformats/jp2/qjp2handler.cpp b/src/plugins/imageformats/jp2/qjp2handler.cpp
index 17373fd..da74fb2 100644
--- a/src/plugins/imageformats/jp2/qjp2handler.cpp
+++ b/src/plugins/imageformats/jp2/qjp2handler.cpp
@@ -589,7 +589,14 @@ bool Jpeg2000JasperReader::read(QImage *pImage)
         if (hasAlpha) {
             qtImage = QImage(qtWidth, qtHeight, QImage::Format_ARGB32);
         } else {
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 5, 0))
             qtImage = QImage(qtWidth, qtHeight, QImage::Format_Grayscale8);
+#else
+            qtImage = QImage(qtWidth, qtHeight, QImage::Format_Indexed8);
+            qtImage.setColorCount(256);
+            for (int c = 0; c < 256; ++c)
+                qtImage.setColor(c, qRgb(c,c,c));
+#endif
         }
     }
 
diff --git a/src/plugins/imageformats/webp/qwebphandler.cpp b/src/plugins/imageformats/webp/qwebphandler.cpp
index 3a7bf43..13ea7fa 100644
--- a/src/plugins/imageformats/webp/qwebphandler.cpp
+++ b/src/plugins/imageformats/webp/qwebphandler.cpp
@@ -176,7 +176,11 @@ bool QWebpHandler::read(QImage *image)
 
     QImage frame(m_iter.width, m_iter.height, QImage::Format_ARGB32);
     uint8_t *output = frame.bits();
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 10, 0))
     size_t output_size = frame.sizeInBytes();
+#else
+    size_t output_size = frame.byteCount();
+#endif
 #if Q_BYTE_ORDER == Q_LITTLE_ENDIAN
     if (!WebPDecodeBGRAInto(
         reinterpret_cast<const uint8_t*>(m_iter.fragment.bytes), m_iter.fragment.size,
-- 
2.14.2

