From b2ed88c66127dec4b4151135c1646dc45d38f491 Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Thu, 13 Jun 2024 00:04:24 +0700
Subject: [PATCH] Switch back from libdeflate to zlib

---
 src/lib/OpenEXRCore/compression.c | 94 +++++++------------------------
 1 file changed, 20 insertions(+), 74 deletions(-)

diff --git a/src/lib/OpenEXRCore/compression.c b/src/lib/OpenEXRCore/compression.c
index 1d2eaea5..3c6c880a 100644
--- a/src/lib/OpenEXRCore/compression.c
+++ b/src/lib/OpenEXRCore/compression.c
@@ -8,13 +8,7 @@
 #include "internal_memory.h"
 #include "internal_structs.h"
 
-#include <libdeflate.h>
-
-#if (                                                                          \
-    LIBDEFLATE_VERSION_MAJOR > 1 ||                                            \
-    (LIBDEFLATE_VERSION_MAJOR == 1 && LIBDEFLATE_VERSION_MINOR > 18))
-#    define EXR_USE_CONFIG_DEFLATE_STRUCT 1
-#endif
+#include <zlib.h>
 
 /* value Aras found to be better trade off of speed vs size */
 #define EXR_DEFAULT_ZLIB_COMPRESS_LEVEL 4
@@ -26,7 +20,7 @@ exr_compress_max_buffer_size (size_t in_bytes)
 {
     size_t r, extra;
 
-    r = libdeflate_zlib_compress_bound (NULL, in_bytes);
+    r = compressBound (in_bytes);
     /*
      * lib deflate has a message about needing a 9 byte boundary
      * but is unclear if it actually adds that or not
@@ -60,19 +54,8 @@ exr_compress_buffer (
     size_t              out_bytes_avail,
     size_t*             actual_out)
 {
-    struct libdeflate_compressor*       comp;
-    const struct _internal_exr_context* pctxt = EXR_CCTXT (ctxt);
-#ifdef EXR_USE_CONFIG_DEFLATE_STRUCT
-    struct libdeflate_options opt = {
-        .sizeof_options = sizeof (struct libdeflate_options),
-        .malloc_func    = pctxt ? pctxt->alloc_fn : internal_exr_alloc,
-        .free_func      = pctxt ? pctxt->free_fn : internal_exr_free};
-
-#else
-    libdeflate_set_memory_allocator (
-        pctxt ? pctxt->alloc_fn : internal_exr_alloc,
-        pctxt ? pctxt->free_fn : internal_exr_free);
-#endif
+    int    res   = Z_OK;
+    uLongf outsz = out_bytes_avail;
 
     if (level < 0)
     {
@@ -81,25 +64,11 @@ exr_compress_buffer (
         if (level < 0) level = EXR_DEFAULT_ZLIB_COMPRESS_LEVEL;
     }
 
-#ifdef EXR_USE_CONFIG_DEFLATE_STRUCT
-    comp = libdeflate_alloc_compressor_ex (level, &opt);
-#else
-    comp = libdeflate_alloc_compressor (level);
-#endif
-    if (comp)
+    res = compress2 ((Bytef*)out, &outsz, in, (const Bytef*)in_bytes, level);
+    if (res == Z_OK)
     {
-        size_t outsz;
-        outsz =
-            libdeflate_zlib_compress (comp, in, in_bytes, out, out_bytes_avail);
-
-        libdeflate_free_compressor (comp);
-
-        if (outsz != 0)
-        {
-            if (actual_out) *actual_out = outsz;
-            return EXR_ERR_SUCCESS;
-        }
-        return EXR_ERR_OUT_OF_MEMORY;
+        if (actual_out) *actual_out = outsz;
+        return EXR_ERR_SUCCESS;
     }
     return EXR_ERR_OUT_OF_MEMORY;
 }
@@ -115,42 +84,19 @@ exr_uncompress_buffer (
     size_t              out_bytes_avail,
     size_t*             actual_out)
 {
-    struct libdeflate_decompressor*     decomp;
-    enum libdeflate_result              res;
-    size_t                              actual_in_bytes;
-    const struct _internal_exr_context* pctxt = EXR_CCTXT (ctxt);
-#ifdef EXR_USE_CONFIG_DEFLATE_STRUCT
-    struct libdeflate_options opt = {
-        .sizeof_options = sizeof (struct libdeflate_options),
-        .malloc_func    = pctxt ? pctxt->alloc_fn : internal_exr_alloc,
-        .free_func      = pctxt ? pctxt->free_fn : internal_exr_free};
-
-    decomp = libdeflate_alloc_decompressor_ex (&opt);
-#else
-    libdeflate_set_memory_allocator (
-        pctxt ? pctxt->alloc_fn : internal_exr_alloc,
-        pctxt ? pctxt->free_fn : internal_exr_free);
-    decomp = libdeflate_alloc_decompressor ();
-#endif
-
-    if (decomp)
+    int    res             = Z_OK;
+    uLongf outsz           = out_bytes_avail;
+    uLongf actual_in_bytes = in_bytes;
+
+    res = uncompress2 ((Bytef*)out, &outsz, (const Bytef*)in, &actual_in_bytes);
+    if (res == Z_OK)
+    {
+        if (actual_out) *actual_out = outsz;
+        if (in_bytes == actual_in_bytes) return EXR_ERR_SUCCESS;
+        /* it's an error to not consume the full buffer, right? */
+    }
+    if (res == Z_OK || res == Z_DATA_ERROR)
     {
-        res = libdeflate_zlib_decompress_ex (
-            decomp,
-            in,
-            in_bytes,
-            out,
-            out_bytes_avail,
-            &actual_in_bytes,
-            actual_out);
-
-        libdeflate_free_decompressor (decomp);
-
-        if (res == LIBDEFLATE_SUCCESS)
-        {
-            if (in_bytes == actual_in_bytes) return EXR_ERR_SUCCESS;
-            /* it's an error to not consume the full buffer, right? */
-        }
         return EXR_ERR_CORRUPT_CHUNK;
     }
     return EXR_ERR_OUT_OF_MEMORY;
-- 
2.39.2

