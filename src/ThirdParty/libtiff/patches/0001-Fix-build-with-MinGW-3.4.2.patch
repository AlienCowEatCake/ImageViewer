From 6511f02b222241b4c4b099837651b6178010614f Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Tue, 29 Dec 2020 17:43:53 +0700
Subject: [PATCH 1/2] Fix build with MinGW 3.4.2

---
 libtiff/tif_lzw.c   |  8 ++++----
 libtiff/tif_win32.c | 23 ++++++++++++++++++++---
 2 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/libtiff/tif_lzw.c b/libtiff/tif_lzw.c
index 4baf78e5..e212e83d 100644
--- a/libtiff/tif_lzw.c
+++ b/libtiff/tif_lzw.c
@@ -329,9 +329,9 @@ static int LZWPreDecode(TIFF *tif, uint16_t s)
 #ifdef WORDS_BIGENDIAN
 #define GetNextData(nextdata, bp) memcpy(&nextdata, bp, sizeof(nextdata))
 #elif SIZEOF_WORDTYPE == 8
-#if defined(_M_X64)
+#if defined(_M_X64) && defined(_MSC_VER)
 #define GetNextData(nextdata, bp) nextdata = _byteswap_uint64(*(uint64_t *)(bp))
-#elif defined(__GNUC__)
+#elif defined(__GNUC__) && ((__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
 #define GetNextData(nextdata, bp)                                              \
     memcpy(&nextdata, bp, sizeof(nextdata));                                   \
     nextdata = __builtin_bswap64(nextdata)
@@ -343,10 +343,10 @@ static int LZWPreDecode(TIFF *tif, uint16_t s)
                (((uint64_t)bp[6]) << 8) | (((uint64_t)bp[7]))
 #endif
 #elif SIZEOF_WORDTYPE == 4
-#if defined(_M_X86)
+#if defined(_M_X86) && defined(_MSC_VER)
 #define GetNextData(nextdata, bp)                                              \
     nextdata = _byteswap_ulong(*(unsigned long *)(bp))
-#elif defined(__GNUC__)
+#elif defined(__GNUC__) && ((__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
 #define GetNextData(nextdata, bp)                                              \
     memcpy(&nextdata, bp, sizeof(nextdata));                                   \
     nextdata = __builtin_bswap32(nextdata)
diff --git a/libtiff/tif_win32.c b/libtiff/tif_win32.c
index d64ba49f..9b2fe612 100644
--- a/libtiff/tif_win32.c
+++ b/libtiff/tif_win32.c
@@ -152,10 +152,27 @@ static int _tiffCloseProc(thandle_t fd) { return (CloseHandle(fd) ? 0 : -1); }
 static uint64_t _tiffSizeProc(thandle_t fd)
 {
     LARGE_INTEGER m;
-    if (GetFileSizeEx(fd, &m))
-        return (m.QuadPart);
+    uint64 result;
+    HMODULE hKernel32 = LoadLibraryA("kernel32.dll");
+    typedef BOOL(WINAPI* GetFileSizeEx_t)(HANDLE, PLARGE_INTEGER);
+    GetFileSizeEx_t GetFileSizeEx_f = (GetFileSizeEx_t)(GetProcAddress(hKernel32, "GetFileSizeEx"));
+    if (GetFileSizeEx_f)
+    {
+        if (GetFileSizeEx_f(fd, &m))
+            result = (uint64)m.QuadPart;
+        else
+            result = 0;
+    }
     else
-        return (0);
+    {
+        m.LowPart = GetFileSize(fd, (LPDWORD)(&m.HighPart));
+        if (m.LowPart != INVALID_FILE_SIZE)
+            result = (uint64)m.QuadPart;
+        else
+            result = 0;
+    }
+    FreeLibrary(hKernel32);
+    return (result);
 }
 
 static int _tiffDummyMapProc(thandle_t fd, void **pbase, toff_t *psize)
-- 
2.46.1

