From e541c71da52ba88df7c4f78ab1c217f6878be95a Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Wed, 28 Dec 2022 05:56:57 +0700
Subject: [PATCH 1/3] Remove Windows-specific font remapping

---
 src/font.c | 54 -----------------------------------------------------
 src/wmf.c  | 55 ------------------------------------------------------
 2 files changed, 109 deletions(-)

diff --git a/src/font.c b/src/font.c
index cef40e5..c1ecb53 100644
--- a/src/font.c
+++ b/src/font.c
@@ -35,45 +35,6 @@
 
 #include "font.h"
 
-#ifdef _WIN32
-
-extern char* _libwmf_get_fontdir();
-
-static char* _libwmf_get_xtra_fontmap (void)
-{
-	static char retval[1000] = "";
-
-	if (retval[0] == '\0')
-	{	strcpy (retval, _libwmf_get_fontdir ());
-		strcat (retval, "\\share\\libwmf\\fonts\\fontmap");
-	}
-
-	return retval;
-}
-
-#undef WMF_XTRA_FONTMAP
-#define WMF_XTRA_FONTMAP _libwmf_get_xtra_fontmap ()
-
-static char* remap_font_file_name(wmfAPI* API,char* filename)
-{
-	/* If filename is prefixed with the compile-time WMF_FONTDIR,
-	 * substitute the run-time font directory.
-	 */
-	char* retval;
-	if (strncmp (filename, WMF_FONTDIR "/", strlen (WMF_FONTDIR "/")) == 0)
-	{	retval = wmf_malloc (API,strlen (filename) - strlen (WMF_FONTDIR) + strlen (_libwmf_get_fontdir ()) + 1);
-		strcpy (retval,_libwmf_get_fontdir ());
-		strcat (retval,filename + strlen (WMF_FONTDIR));
-	}
-	else
-	{	retval = wmf_strdup (API,filename);
-	}
-
-	return retval;
-}
-
-#endif
-
 static void ipa_font_add_wmf (wmfAPI* API,wmfFontMap* mapping)
 {	wmfFontmapData* font_data = (wmfFontmapData*) ((wmfFontData*) API->font_data)->user_data;
 
@@ -1661,16 +1622,10 @@ static FT_Face ipa_font_face_open (wmfAPI* API,char* ps_name,char* glyphs,char*
 
 	struct stat stat_buf;
 
-#ifdef _WIN32
-	glyphs = remap_font_file_name (API,glyphs);
-#endif
 	if (stat (glyphs,&stat_buf))
 	{	WMF_ERROR (API,"unable to stat font file:");
 		WMF_ERROR (API,glyphs);
 		API->err = wmf_E_BadFile;
-#ifdef _WIN32
-		wmf_free (API,glyphs);
-#endif
 		return (0);
 	}
 
@@ -1678,18 +1633,9 @@ static FT_Face ipa_font_face_open (wmfAPI* API,char* ps_name,char* glyphs,char*
 	{	WMF_ERROR (API,"Failed to open font:");
 		WMF_ERROR (API,glyphs);
 		API->err = wmf_E_DeviceError;
-#ifdef _WIN32
-		wmf_free (API,glyphs);
-#endif
 		return (0);
 	}
 
-#ifdef _WIN32
-	if (metrics)
-	{
-		metrics = remap_font_file_name (API,metrics);
-	}
-#endif
 	if (metrics)
 	{	if (stat (metrics,&stat_buf))
 		{	WMF_DEBUG (API,"unable to stat font metrics file:");
diff --git a/src/wmf.c b/src/wmf.c
index 8dd6410..7dc996d 100644
--- a/src/wmf.c
+++ b/src/wmf.c
@@ -25,59 +25,6 @@
 
 #include "wmfdefs.h"
 
-#ifdef _WIN32
-#include <windows.h>
-
-static char installation_prefix[1000] = "";
-
-BOOL WINAPI DllMain (HINSTANCE hinstDLL,DWORD fdwReason,LPVOID lpvReserved)
-{
-	char* p;
-
-	switch (fdwReason) {
-	case DLL_PROCESS_ATTACH:
-		if (!GetModuleFileName ((HMODULE) hinstDLL,
-					installation_prefix,
-					sizeof (installation_prefix)))
-			break;
-		
-		/* If the libwmf DLL is in a "bin" or "lib" subfolder, assume
-		 * it's a Unix-style installation tree.
-		 */
-		p = strrchr (installation_prefix, '\\');
-		if (p)
-		{	*p = '\0';
-			p = strrchr (installation_prefix, '\\');
-			if (p && (stricmp (p + 1, "bin") == 0 ||
-				  stricmp (p + 1, "lib") == 0))
-				*p = '\0';
-		}
-		else
-			installation_prefix[0] = '\0';
-      
-		break;
-	}
-
-  return TRUE;
-}
-
-char* _libwmf_get_fontdir (void)
-{
-	static char retval[1000] = "";
-
-	if (retval[0] == '\0')
-	{	strcpy (retval, installation_prefix);
-		strcat (retval, "\\share\\libwmf\\fonts");
-	}
-
-	return retval;
-}
-
-#undef WMF_FONTDIR
-#define WMF_FONTDIR _libwmf_get_fontdir ()
-
-#endif
-
 static void wmf_arg (unsigned long*,wmfAPI_Options*);
 static void wmf_arg_fontdirs (wmfAPI*,wmfAPI_Options*);
 
@@ -283,9 +230,7 @@ static void wmf_arg_fontdirs (wmfAPI* API,wmfAPI_Options* options)
 		}
 	}
 
-#ifndef _WIN32
  	wmf_ipa_font_dir (API,WMF_GS_FONTDIR);
-#endif
 	wmf_ipa_font_dir (API,WMF_FONTDIR);
 }
 
-- 
2.30.2

