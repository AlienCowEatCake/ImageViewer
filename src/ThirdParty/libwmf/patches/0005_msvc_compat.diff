diff --git a/src/player.c b/src/player.c
index e8e5a12..859b295 100644
--- a/src/player.c
+++ b/src/player.c
@@ -87,6 +87,8 @@ wmf_error_t wmf_player_init (wmfAPI* API)
 wmf_error_t wmf_scan (wmfAPI* API,unsigned long flags,wmfD_Rect* d_r)
 {	wmfPlayer_t* P  = (wmfPlayer_t*) API->player_data;
 
+	U32 nMaxRecordSize;
+
 	WMF_DEBUG (API,"~~~~~~~~wmf_scan");
 
 	if (ERR (API))
@@ -140,7 +142,7 @@ wmf_error_t wmf_scan (wmfAPI* API,unsigned long flags,wmfD_Rect* d_r)
 		return (API->err);
 	}
 
-	U32 nMaxRecordSize = (MAX_REC_SIZE(API)  ) * 2 * sizeof (unsigned char);
+	nMaxRecordSize = (MAX_REC_SIZE(API)  ) * 2 * sizeof (unsigned char);
 	if (nMaxRecordSize)
 	{
 		//before allocating memory do a sanity check on size by seeking
@@ -149,12 +151,13 @@ wmf_error_t wmf_scan (wmfAPI* API,unsigned long flags,wmfD_Rect* d_r)
 		//to SEEK_END. So use what we have to skip to the last byte and
 		//try and read it.
 		const long nPos = WMF_TELL (API);
+		int byte;
 		WMF_SEEK (API, nPos + nMaxRecordSize - 1);
 		if (ERR (API))
 		{	WMF_DEBUG (API,"bailing...");
 			return (API->err);
 		}
-		int byte = WMF_READ (API);
+		byte = WMF_READ (API);
 		if (byte == (-1))
 		{	WMF_ERROR (API,"Unexpected EOF!");
 		       	API->err = wmf_E_EOF;
