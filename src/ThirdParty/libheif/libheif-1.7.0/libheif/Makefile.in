# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3)
@HAVE_AOM_TRUE@am__append_1 = $(aom_LIBS)
@HAVE_LIBDE265_TRUE@am__append_2 = $(libde265_LIBS)
@HAVE_X265_TRUE@am__append_3 = $(x265_LIBS)
@MINGW_TRUE@am__append_4 = -no-undefined
@HAVE_AOM_TRUE@am__append_5 = \
@HAVE_AOM_TRUE@  heif_encoder_aom.cc \
@HAVE_AOM_TRUE@  heif_encoder_aom.h \
@HAVE_AOM_TRUE@  heif_decoder_aom.cc \
@HAVE_AOM_TRUE@  heif_decoder_aom.h

@HAVE_LIBDE265_TRUE@am__append_6 = \
@HAVE_LIBDE265_TRUE@  heif_decoder_libde265.cc \
@HAVE_LIBDE265_TRUE@  heif_decoder_libde265.h

@HAVE_X265_TRUE@am__append_7 = \
@HAVE_X265_TRUE@  heif_encoder_x265.cc \
@HAVE_X265_TRUE@  heif_encoder_x265.h

@HAVE_VISIBILITY_TRUE@am__append_8 = -DHAVE_VISIBILITY
@HAVE_VISIBILITY_TRUE@am__append_9 = -DHAVE_VISIBILITY
@ENABLE_LIBFUZZER_TRUE@am__append_10 = box-fuzzer \
@ENABLE_LIBFUZZER_TRUE@  color-conversion-fuzzer

@ENABLE_LIBFUZZER_TRUE@@HAVE_LIBDE265_TRUE@am__append_11 = file-fuzzer
@ENABLE_LIBFUZZER_TRUE@@HAVE_X265_TRUE@am__append_12 = encoder-fuzzer
subdir = libheif
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_c_cxx_compile_flags.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/visibility.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(libheif_la_HEADERS) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = heif_version.h
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libfuzzers_a_AR = $(AR) $(ARFLAGS)
libfuzzers_a_LIBADD =
am__libfuzzers_a_SOURCES_DIST = box_fuzzer.cc \
	color_conversion_fuzzer.cc encoder_fuzzer.cc file_fuzzer.cc
@ENABLE_LIBFUZZER_FALSE@am_libfuzzers_a_OBJECTS =  \
@ENABLE_LIBFUZZER_FALSE@	box_fuzzer.$(OBJEXT) \
@ENABLE_LIBFUZZER_FALSE@	color_conversion_fuzzer.$(OBJEXT) \
@ENABLE_LIBFUZZER_FALSE@	encoder_fuzzer.$(OBJEXT) \
@ENABLE_LIBFUZZER_FALSE@	file_fuzzer.$(OBJEXT)
libfuzzers_a_OBJECTS = $(am_libfuzzers_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libheif_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
@HAVE_AOM_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@HAVE_LIBDE265_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@HAVE_X265_TRUE@am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_4)
libheif_la_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__libheif_la_SOURCES_DIST = bitstream.h bitstream.cc box.h box.cc \
	error.h error.cc heif_api_structs.h heif_file.h heif_file.cc \
	heif_image.h heif_image.cc heif_limits.h heif.h heif.cc \
	heif_context.h heif_context.cc heif_hevc.h heif_hevc.cc \
	heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	heif_encoder_aom.cc heif_encoder_aom.h heif_decoder_aom.cc \
	heif_decoder_aom.h heif_decoder_libde265.cc \
	heif_decoder_libde265.h heif_encoder_x265.cc \
	heif_encoder_x265.h
@HAVE_AOM_TRUE@am__objects_1 = libheif_la-heif_encoder_aom.lo \
@HAVE_AOM_TRUE@	libheif_la-heif_decoder_aom.lo
@HAVE_LIBDE265_TRUE@am__objects_2 =  \
@HAVE_LIBDE265_TRUE@	libheif_la-heif_decoder_libde265.lo
@HAVE_X265_TRUE@am__objects_3 = libheif_la-heif_encoder_x265.lo
am_libheif_la_OBJECTS = libheif_la-bitstream.lo libheif_la-box.lo \
	libheif_la-error.lo libheif_la-heif_file.lo \
	libheif_la-heif_image.lo libheif_la-heif.lo \
	libheif_la-heif_context.lo libheif_la-heif_hevc.lo \
	libheif_la-heif_avif.lo libheif_la-heif_plugin_registry.lo \
	libheif_la-heif_plugin.lo libheif_la-heif_colorconversion.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3)
libheif_la_OBJECTS = $(am_libheif_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libheif_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libheif_la_CXXFLAGS) \
	$(CXXFLAGS) $(libheif_la_LDFLAGS) $(LDFLAGS) -o $@
@ENABLE_LIBFUZZER_TRUE@am__EXEEXT_1 = box-fuzzer$(EXEEXT) \
@ENABLE_LIBFUZZER_TRUE@	color-conversion-fuzzer$(EXEEXT)
@ENABLE_LIBFUZZER_TRUE@@HAVE_LIBDE265_TRUE@am__EXEEXT_2 = file-fuzzer$(EXEEXT)
@ENABLE_LIBFUZZER_TRUE@@HAVE_X265_TRUE@am__EXEEXT_3 = encoder-fuzzer$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__box_fuzzer_SOURCES_DIST = bitstream.h bitstream.cc box.h box.cc \
	error.h error.cc heif_api_structs.h heif_file.h heif_file.cc \
	heif_image.h heif_image.cc heif_limits.h heif.h heif.cc \
	heif_context.h heif_context.cc heif_hevc.h heif_hevc.cc \
	heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	heif_encoder_aom.cc heif_encoder_aom.h heif_decoder_aom.cc \
	heif_decoder_aom.h heif_decoder_libde265.cc \
	heif_decoder_libde265.h heif_encoder_x265.cc \
	heif_encoder_x265.h box_fuzzer.cc
@HAVE_AOM_TRUE@am__objects_4 = box_fuzzer-heif_encoder_aom.$(OBJEXT) \
@HAVE_AOM_TRUE@	box_fuzzer-heif_decoder_aom.$(OBJEXT)
@HAVE_LIBDE265_TRUE@am__objects_5 = box_fuzzer-heif_decoder_libde265.$(OBJEXT)
@HAVE_X265_TRUE@am__objects_6 =  \
@HAVE_X265_TRUE@	box_fuzzer-heif_encoder_x265.$(OBJEXT)
am__objects_7 = box_fuzzer-bitstream.$(OBJEXT) \
	box_fuzzer-box.$(OBJEXT) box_fuzzer-error.$(OBJEXT) \
	box_fuzzer-heif_file.$(OBJEXT) box_fuzzer-heif_image.$(OBJEXT) \
	box_fuzzer-heif.$(OBJEXT) box_fuzzer-heif_context.$(OBJEXT) \
	box_fuzzer-heif_hevc.$(OBJEXT) box_fuzzer-heif_avif.$(OBJEXT) \
	box_fuzzer-heif_plugin_registry.$(OBJEXT) \
	box_fuzzer-heif_plugin.$(OBJEXT) \
	box_fuzzer-heif_colorconversion.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6)
am_box_fuzzer_OBJECTS = $(am__objects_7) \
	box_fuzzer-box_fuzzer.$(OBJEXT)
box_fuzzer_OBJECTS = $(am_box_fuzzer_OBJECTS)
box_fuzzer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(box_fuzzer_CXXFLAGS) \
	$(CXXFLAGS) $(box_fuzzer_LDFLAGS) $(LDFLAGS) -o $@
am__color_conversion_fuzzer_SOURCES_DIST = bitstream.h bitstream.cc \
	box.h box.cc error.h error.cc heif_api_structs.h heif_file.h \
	heif_file.cc heif_image.h heif_image.cc heif_limits.h heif.h \
	heif.cc heif_context.h heif_context.cc heif_hevc.h \
	heif_hevc.cc heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	heif_encoder_aom.cc heif_encoder_aom.h heif_decoder_aom.cc \
	heif_decoder_aom.h heif_decoder_libde265.cc \
	heif_decoder_libde265.h heif_encoder_x265.cc \
	heif_encoder_x265.h color_conversion_fuzzer.cc
@HAVE_AOM_TRUE@am__objects_8 = color_conversion_fuzzer-heif_encoder_aom.$(OBJEXT) \
@HAVE_AOM_TRUE@	color_conversion_fuzzer-heif_decoder_aom.$(OBJEXT)
@HAVE_LIBDE265_TRUE@am__objects_9 = color_conversion_fuzzer-heif_decoder_libde265.$(OBJEXT)
@HAVE_X265_TRUE@am__objects_10 = color_conversion_fuzzer-heif_encoder_x265.$(OBJEXT)
am__objects_11 = color_conversion_fuzzer-bitstream.$(OBJEXT) \
	color_conversion_fuzzer-box.$(OBJEXT) \
	color_conversion_fuzzer-error.$(OBJEXT) \
	color_conversion_fuzzer-heif_file.$(OBJEXT) \
	color_conversion_fuzzer-heif_image.$(OBJEXT) \
	color_conversion_fuzzer-heif.$(OBJEXT) \
	color_conversion_fuzzer-heif_context.$(OBJEXT) \
	color_conversion_fuzzer-heif_hevc.$(OBJEXT) \
	color_conversion_fuzzer-heif_avif.$(OBJEXT) \
	color_conversion_fuzzer-heif_plugin_registry.$(OBJEXT) \
	color_conversion_fuzzer-heif_plugin.$(OBJEXT) \
	color_conversion_fuzzer-heif_colorconversion.$(OBJEXT) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10)
am_color_conversion_fuzzer_OBJECTS = $(am__objects_11) \
	color_conversion_fuzzer-color_conversion_fuzzer.$(OBJEXT)
color_conversion_fuzzer_OBJECTS =  \
	$(am_color_conversion_fuzzer_OBJECTS)
color_conversion_fuzzer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) \
	$(color_conversion_fuzzer_LDFLAGS) $(LDFLAGS) -o $@
am__encoder_fuzzer_SOURCES_DIST = bitstream.h bitstream.cc box.h \
	box.cc error.h error.cc heif_api_structs.h heif_file.h \
	heif_file.cc heif_image.h heif_image.cc heif_limits.h heif.h \
	heif.cc heif_context.h heif_context.cc heif_hevc.h \
	heif_hevc.cc heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	heif_encoder_aom.cc heif_encoder_aom.h heif_decoder_aom.cc \
	heif_decoder_aom.h heif_decoder_libde265.cc \
	heif_decoder_libde265.h heif_encoder_x265.cc \
	heif_encoder_x265.h encoder_fuzzer.cc
@HAVE_AOM_TRUE@am__objects_12 =  \
@HAVE_AOM_TRUE@	encoder_fuzzer-heif_encoder_aom.$(OBJEXT) \
@HAVE_AOM_TRUE@	encoder_fuzzer-heif_decoder_aom.$(OBJEXT)
@HAVE_LIBDE265_TRUE@am__objects_13 = encoder_fuzzer-heif_decoder_libde265.$(OBJEXT)
@HAVE_X265_TRUE@am__objects_14 =  \
@HAVE_X265_TRUE@	encoder_fuzzer-heif_encoder_x265.$(OBJEXT)
am__objects_15 = encoder_fuzzer-bitstream.$(OBJEXT) \
	encoder_fuzzer-box.$(OBJEXT) encoder_fuzzer-error.$(OBJEXT) \
	encoder_fuzzer-heif_file.$(OBJEXT) \
	encoder_fuzzer-heif_image.$(OBJEXT) \
	encoder_fuzzer-heif.$(OBJEXT) \
	encoder_fuzzer-heif_context.$(OBJEXT) \
	encoder_fuzzer-heif_hevc.$(OBJEXT) \
	encoder_fuzzer-heif_avif.$(OBJEXT) \
	encoder_fuzzer-heif_plugin_registry.$(OBJEXT) \
	encoder_fuzzer-heif_plugin.$(OBJEXT) \
	encoder_fuzzer-heif_colorconversion.$(OBJEXT) \
	$(am__objects_12) $(am__objects_13) $(am__objects_14)
am_encoder_fuzzer_OBJECTS = $(am__objects_15) \
	encoder_fuzzer-encoder_fuzzer.$(OBJEXT)
encoder_fuzzer_OBJECTS = $(am_encoder_fuzzer_OBJECTS)
encoder_fuzzer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) \
	$(encoder_fuzzer_LDFLAGS) $(LDFLAGS) -o $@
am__file_fuzzer_SOURCES_DIST = bitstream.h bitstream.cc box.h box.cc \
	error.h error.cc heif_api_structs.h heif_file.h heif_file.cc \
	heif_image.h heif_image.cc heif_limits.h heif.h heif.cc \
	heif_context.h heif_context.cc heif_hevc.h heif_hevc.cc \
	heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	heif_encoder_aom.cc heif_encoder_aom.h heif_decoder_aom.cc \
	heif_decoder_aom.h heif_decoder_libde265.cc \
	heif_decoder_libde265.h heif_encoder_x265.cc \
	heif_encoder_x265.h file_fuzzer.cc
@HAVE_AOM_TRUE@am__objects_16 =  \
@HAVE_AOM_TRUE@	file_fuzzer-heif_encoder_aom.$(OBJEXT) \
@HAVE_AOM_TRUE@	file_fuzzer-heif_decoder_aom.$(OBJEXT)
@HAVE_LIBDE265_TRUE@am__objects_17 = file_fuzzer-heif_decoder_libde265.$(OBJEXT)
@HAVE_X265_TRUE@am__objects_18 =  \
@HAVE_X265_TRUE@	file_fuzzer-heif_encoder_x265.$(OBJEXT)
am__objects_19 = file_fuzzer-bitstream.$(OBJEXT) \
	file_fuzzer-box.$(OBJEXT) file_fuzzer-error.$(OBJEXT) \
	file_fuzzer-heif_file.$(OBJEXT) \
	file_fuzzer-heif_image.$(OBJEXT) file_fuzzer-heif.$(OBJEXT) \
	file_fuzzer-heif_context.$(OBJEXT) \
	file_fuzzer-heif_hevc.$(OBJEXT) \
	file_fuzzer-heif_avif.$(OBJEXT) \
	file_fuzzer-heif_plugin_registry.$(OBJEXT) \
	file_fuzzer-heif_plugin.$(OBJEXT) \
	file_fuzzer-heif_colorconversion.$(OBJEXT) $(am__objects_16) \
	$(am__objects_17) $(am__objects_18)
am_file_fuzzer_OBJECTS = $(am__objects_19) \
	file_fuzzer-file_fuzzer.$(OBJEXT)
file_fuzzer_OBJECTS = $(am_file_fuzzer_OBJECTS)
file_fuzzer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(file_fuzzer_CXXFLAGS) \
	$(CXXFLAGS) $(file_fuzzer_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libfuzzers_a_SOURCES) $(libheif_la_SOURCES) \
	$(box_fuzzer_SOURCES) $(color_conversion_fuzzer_SOURCES) \
	$(encoder_fuzzer_SOURCES) $(file_fuzzer_SOURCES)
DIST_SOURCES = $(am__libfuzzers_a_SOURCES_DIST) \
	$(am__libheif_la_SOURCES_DIST) $(am__box_fuzzer_SOURCES_DIST) \
	$(am__color_conversion_fuzzer_SOURCES_DIST) \
	$(am__encoder_fuzzer_SOURCES_DIST) \
	$(am__file_fuzzer_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libheif_la_HEADERS) $(noinst_HEADERS)
am__extra_recursive_targets = format-recursive test-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/heif_version.h.in \
	$(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAG_VISIBILITY = @CFLAG_VISIBILITY@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_LIBFUZZER = @ENABLE_LIBFUZZER@
ENABLE_PARALLEL_TILE_DECODING = @ENABLE_PARALLEL_TILE_DECODING@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FUZZING_ENGINE = @FUZZING_ENGINE@
GO = @GO@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
HAVE_GO = @HAVE_GO@
HAVE_VISIBILITY = @HAVE_VISIBILITY@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBHEIF_AGE = @LIBHEIF_AGE@
LIBHEIF_CURRENT = @LIBHEIF_CURRENT@
LIBHEIF_REVISION = @LIBHEIF_REVISION@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PROJECT_VERSION_MAJOR = @PROJECT_VERSION_MAJOR@
PROJECT_VERSION_MINOR = @PROJECT_VERSION_MINOR@
PROJECT_VERSION_PATCH = @PROJECT_VERSION_PATCH@
PROJECT_VERSION_TWEAK = @PROJECT_VERSION_TWEAK@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WITH_EXAMPLES = @WITH_EXAMPLES@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
aom_CFLAGS = @aom_CFLAGS@
aom_LIBS = @aom_LIBS@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gdk_pixbuf_binary_version = @gdk_pixbuf_binary_version@
gdk_pixbuf_binarydir = @gdk_pixbuf_binarydir@
gdk_pixbuf_cache_file = @gdk_pixbuf_cache_file@
gdk_pixbuf_moduledir = @gdk_pixbuf_moduledir@
gdkpixbuf_CFLAGS = @gdkpixbuf_CFLAGS@
gdkpixbuf_LIBS = @gdkpixbuf_LIBS@
have_aom = @have_aom@
have_libde265 = @have_libde265@
have_x265 = @have_x265@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libde265_CFLAGS = @libde265_CFLAGS@
libde265_LIBS = @libde265_LIBS@
libdir = @libdir@
libexecdir = @libexecdir@
libjpeg_CFLAGS = @libjpeg_CFLAGS@
libjpeg_LIBS = @libjpeg_LIBS@
libpng_CFLAGS = @libpng_CFLAGS@
libpng_LIBS = @libpng_LIBS@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
x265_CFLAGS = @x265_CFLAGS@
x265_LIBS = @x265_LIBS@
AUTOMAKE_OPTIONS = subdir-objects
lib_LTLIBRARIES = libheif.la
libheif_ladir = \
        $(includedir)/libheif

ADDITIONAL_LIBS = $(am__append_1) $(am__append_2) $(am__append_3)
libheif_la_CPPFLAGS = 
libheif_la_CFLAGS = $(CFLAG_VISIBILITY) -DLIBHEIF_EXPORTS \
	$(am__append_8)
libheif_la_CXXFLAGS = $(CFLAG_VISIBILITY) $(aom_CFLAGS) \
	$(libde265_CFLAGS) $(x265_CFLAGS) -DLIBHEIF_EXPORTS \
	-I$(top_srcdir) $(am__append_9)
libheif_la_LIBADD = $(ADDITIONAL_LIBS)
libheif_la_LDFLAGS = -version-info \
	$(LIBHEIF_CURRENT):$(LIBHEIF_REVISION):$(LIBHEIF_AGE) \
	$(am__append_4)
libheif_la_SOURCES = bitstream.h bitstream.cc box.h box.cc error.h \
	error.cc heif_api_structs.h heif_file.h heif_file.cc \
	heif_image.h heif_image.cc heif_limits.h heif.h heif.cc \
	heif_context.h heif_context.cc heif_hevc.h heif_hevc.cc \
	heif_avif.h heif_avif.cc heif_plugin_registry.h \
	heif_plugin_registry.cc heif_plugin.h heif_plugin.cc \
	heif_colorconversion.h heif_colorconversion.cc logging.h \
	$(am__append_5) $(am__append_6) $(am__append_7)
libheif_la_HEADERS = \
  heif.h \
  heif_plugin.h \
  heif_version.h \
  heif_cxx.h

noinst_HEADERS = \
  heif_emscripten.h

@ENABLE_LIBFUZZER_FALSE@noinst_LIBRARIES = libfuzzers.a
@ENABLE_LIBFUZZER_FALSE@libfuzzers_a_SOURCES = \
@ENABLE_LIBFUZZER_FALSE@  box_fuzzer.cc \
@ENABLE_LIBFUZZER_FALSE@  color_conversion_fuzzer.cc \
@ENABLE_LIBFUZZER_FALSE@  encoder_fuzzer.cc \
@ENABLE_LIBFUZZER_FALSE@  file_fuzzer.cc

box_fuzzer_DEPENDENCIES = 
box_fuzzer_CXXFLAGS = $(libde265_CFLAGS)
box_fuzzer_LDFLAGS = $(FUZZING_ENGINE)
box_fuzzer_LDADD = $(ADDITIONAL_LIBS)
box_fuzzer_SOURCES = $(libheif_la_SOURCES) box_fuzzer.cc
color_conversion_fuzzer_DEPENDENCIES = 
color_conversion_fuzzer_CXXFLAGS = $(libde265_CFLAGS)
color_conversion_fuzzer_LDFLAGS = $(FUZZING_ENGINE)
color_conversion_fuzzer_LDADD = $(ADDITIONAL_LIBS)
color_conversion_fuzzer_SOURCES = $(libheif_la_SOURCES) color_conversion_fuzzer.cc
encoder_fuzzer_DEPENDENCIES = 
encoder_fuzzer_CXXFLAGS = $(libde265_CFLAGS)
encoder_fuzzer_LDFLAGS = $(FUZZING_ENGINE)
encoder_fuzzer_LDADD = $(ADDITIONAL_LIBS)
encoder_fuzzer_SOURCES = $(libheif_la_SOURCES) encoder_fuzzer.cc
file_fuzzer_DEPENDENCIES = 
file_fuzzer_CXXFLAGS = $(libde265_CFLAGS)
file_fuzzer_LDFLAGS = $(FUZZING_ENGINE)
file_fuzzer_LDADD = $(ADDITIONAL_LIBS)
file_fuzzer_SOURCES = $(libheif_la_SOURCES) file_fuzzer.cc
EXTRA_DIST = \
  CMakeLists.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libheif/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libheif/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
heif_version.h: $(top_builddir)/config.status $(srcdir)/heif_version.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libfuzzers.a: $(libfuzzers_a_OBJECTS) $(libfuzzers_a_DEPENDENCIES) $(EXTRA_libfuzzers_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libfuzzers.a
	$(AM_V_AR)$(libfuzzers_a_AR) libfuzzers.a $(libfuzzers_a_OBJECTS) $(libfuzzers_a_LIBADD)
	$(AM_V_at)$(RANLIB) libfuzzers.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libheif.la: $(libheif_la_OBJECTS) $(libheif_la_DEPENDENCIES) $(EXTRA_libheif_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libheif_la_LINK) -rpath $(libdir) $(libheif_la_OBJECTS) $(libheif_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

box-fuzzer$(EXEEXT): $(box_fuzzer_OBJECTS) $(box_fuzzer_DEPENDENCIES) $(EXTRA_box_fuzzer_DEPENDENCIES) 
	@rm -f box-fuzzer$(EXEEXT)
	$(AM_V_CXXLD)$(box_fuzzer_LINK) $(box_fuzzer_OBJECTS) $(box_fuzzer_LDADD) $(LIBS)

color-conversion-fuzzer$(EXEEXT): $(color_conversion_fuzzer_OBJECTS) $(color_conversion_fuzzer_DEPENDENCIES) $(EXTRA_color_conversion_fuzzer_DEPENDENCIES) 
	@rm -f color-conversion-fuzzer$(EXEEXT)
	$(AM_V_CXXLD)$(color_conversion_fuzzer_LINK) $(color_conversion_fuzzer_OBJECTS) $(color_conversion_fuzzer_LDADD) $(LIBS)

encoder-fuzzer$(EXEEXT): $(encoder_fuzzer_OBJECTS) $(encoder_fuzzer_DEPENDENCIES) $(EXTRA_encoder_fuzzer_DEPENDENCIES) 
	@rm -f encoder-fuzzer$(EXEEXT)
	$(AM_V_CXXLD)$(encoder_fuzzer_LINK) $(encoder_fuzzer_OBJECTS) $(encoder_fuzzer_LDADD) $(LIBS)

file-fuzzer$(EXEEXT): $(file_fuzzer_OBJECTS) $(file_fuzzer_DEPENDENCIES) $(EXTRA_file_fuzzer_DEPENDENCIES) 
	@rm -f file-fuzzer$(EXEEXT)
	$(AM_V_CXXLD)$(file_fuzzer_LINK) $(file_fuzzer_OBJECTS) $(file_fuzzer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-bitstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-box_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_avif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_colorconversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_decoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_decoder_libde265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_encoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_encoder_x265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_hevc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer-heif_plugin_registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-bitstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_avif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_hevc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/color_conversion_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-bitstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_avif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_colorconversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_hevc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/encoder_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-bitstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-file_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_avif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_colorconversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_context.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_decoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_decoder_libde265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_encoder_aom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_encoder_x265.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_hevc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_image.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer-heif_plugin_registry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_fuzzer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-bitstream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-box.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_avif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_colorconversion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_context.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_decoder_aom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_decoder_libde265.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_encoder_aom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_encoder_x265.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_hevc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_image.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_plugin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libheif_la-heif_plugin_registry.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libheif_la-bitstream.lo: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-bitstream.lo -MD -MP -MF $(DEPDIR)/libheif_la-bitstream.Tpo -c -o libheif_la-bitstream.lo `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-bitstream.Tpo $(DEPDIR)/libheif_la-bitstream.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='libheif_la-bitstream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-bitstream.lo `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc

libheif_la-box.lo: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-box.lo -MD -MP -MF $(DEPDIR)/libheif_la-box.Tpo -c -o libheif_la-box.lo `test -f 'box.cc' || echo '$(srcdir)/'`box.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-box.Tpo $(DEPDIR)/libheif_la-box.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='libheif_la-box.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-box.lo `test -f 'box.cc' || echo '$(srcdir)/'`box.cc

libheif_la-error.lo: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-error.lo -MD -MP -MF $(DEPDIR)/libheif_la-error.Tpo -c -o libheif_la-error.lo `test -f 'error.cc' || echo '$(srcdir)/'`error.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-error.Tpo $(DEPDIR)/libheif_la-error.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='libheif_la-error.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-error.lo `test -f 'error.cc' || echo '$(srcdir)/'`error.cc

libheif_la-heif_file.lo: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_file.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_file.Tpo -c -o libheif_la-heif_file.lo `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_file.Tpo $(DEPDIR)/libheif_la-heif_file.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='libheif_la-heif_file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_file.lo `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc

libheif_la-heif_image.lo: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_image.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_image.Tpo -c -o libheif_la-heif_image.lo `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_image.Tpo $(DEPDIR)/libheif_la-heif_image.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='libheif_la-heif_image.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_image.lo `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc

libheif_la-heif.lo: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif.Tpo -c -o libheif_la-heif.lo `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif.Tpo $(DEPDIR)/libheif_la-heif.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='libheif_la-heif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif.lo `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc

libheif_la-heif_context.lo: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_context.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_context.Tpo -c -o libheif_la-heif_context.lo `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_context.Tpo $(DEPDIR)/libheif_la-heif_context.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='libheif_la-heif_context.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_context.lo `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc

libheif_la-heif_hevc.lo: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_hevc.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_hevc.Tpo -c -o libheif_la-heif_hevc.lo `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_hevc.Tpo $(DEPDIR)/libheif_la-heif_hevc.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='libheif_la-heif_hevc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_hevc.lo `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc

libheif_la-heif_avif.lo: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_avif.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_avif.Tpo -c -o libheif_la-heif_avif.lo `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_avif.Tpo $(DEPDIR)/libheif_la-heif_avif.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='libheif_la-heif_avif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_avif.lo `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc

libheif_la-heif_plugin_registry.lo: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_plugin_registry.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_plugin_registry.Tpo -c -o libheif_la-heif_plugin_registry.lo `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_plugin_registry.Tpo $(DEPDIR)/libheif_la-heif_plugin_registry.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='libheif_la-heif_plugin_registry.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_plugin_registry.lo `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc

libheif_la-heif_plugin.lo: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_plugin.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_plugin.Tpo -c -o libheif_la-heif_plugin.lo `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_plugin.Tpo $(DEPDIR)/libheif_la-heif_plugin.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='libheif_la-heif_plugin.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_plugin.lo `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc

libheif_la-heif_colorconversion.lo: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_colorconversion.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_colorconversion.Tpo -c -o libheif_la-heif_colorconversion.lo `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_colorconversion.Tpo $(DEPDIR)/libheif_la-heif_colorconversion.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='libheif_la-heif_colorconversion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_colorconversion.lo `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc

libheif_la-heif_encoder_aom.lo: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_encoder_aom.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_encoder_aom.Tpo -c -o libheif_la-heif_encoder_aom.lo `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_encoder_aom.Tpo $(DEPDIR)/libheif_la-heif_encoder_aom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='libheif_la-heif_encoder_aom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_encoder_aom.lo `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc

libheif_la-heif_decoder_aom.lo: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_decoder_aom.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_decoder_aom.Tpo -c -o libheif_la-heif_decoder_aom.lo `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_decoder_aom.Tpo $(DEPDIR)/libheif_la-heif_decoder_aom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='libheif_la-heif_decoder_aom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_decoder_aom.lo `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc

libheif_la-heif_decoder_libde265.lo: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_decoder_libde265.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_decoder_libde265.Tpo -c -o libheif_la-heif_decoder_libde265.lo `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_decoder_libde265.Tpo $(DEPDIR)/libheif_la-heif_decoder_libde265.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='libheif_la-heif_decoder_libde265.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_decoder_libde265.lo `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc

libheif_la-heif_encoder_x265.lo: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -MT libheif_la-heif_encoder_x265.lo -MD -MP -MF $(DEPDIR)/libheif_la-heif_encoder_x265.Tpo -c -o libheif_la-heif_encoder_x265.lo `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libheif_la-heif_encoder_x265.Tpo $(DEPDIR)/libheif_la-heif_encoder_x265.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='libheif_la-heif_encoder_x265.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libheif_la_CPPFLAGS) $(CPPFLAGS) $(libheif_la_CXXFLAGS) $(CXXFLAGS) -c -o libheif_la-heif_encoder_x265.lo `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc

box_fuzzer-bitstream.o: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-bitstream.o -MD -MP -MF $(DEPDIR)/box_fuzzer-bitstream.Tpo -c -o box_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-bitstream.Tpo $(DEPDIR)/box_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='box_fuzzer-bitstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc

box_fuzzer-bitstream.obj: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-bitstream.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-bitstream.Tpo -c -o box_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-bitstream.Tpo $(DEPDIR)/box_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='box_fuzzer-bitstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`

box_fuzzer-box.o: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-box.o -MD -MP -MF $(DEPDIR)/box_fuzzer-box.Tpo -c -o box_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-box.Tpo $(DEPDIR)/box_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='box_fuzzer-box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc

box_fuzzer-box.obj: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-box.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-box.Tpo -c -o box_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-box.Tpo $(DEPDIR)/box_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='box_fuzzer-box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`

box_fuzzer-error.o: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-error.o -MD -MP -MF $(DEPDIR)/box_fuzzer-error.Tpo -c -o box_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-error.Tpo $(DEPDIR)/box_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='box_fuzzer-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc

box_fuzzer-error.obj: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-error.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-error.Tpo -c -o box_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-error.Tpo $(DEPDIR)/box_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='box_fuzzer-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`

box_fuzzer-heif_file.o: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_file.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_file.Tpo -c -o box_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_file.Tpo $(DEPDIR)/box_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='box_fuzzer-heif_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc

box_fuzzer-heif_file.obj: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_file.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_file.Tpo -c -o box_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_file.Tpo $(DEPDIR)/box_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='box_fuzzer-heif_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`

box_fuzzer-heif_image.o: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_image.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_image.Tpo -c -o box_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_image.Tpo $(DEPDIR)/box_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='box_fuzzer-heif_image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc

box_fuzzer-heif_image.obj: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_image.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_image.Tpo -c -o box_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_image.Tpo $(DEPDIR)/box_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='box_fuzzer-heif_image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`

box_fuzzer-heif.o: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif.Tpo -c -o box_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif.Tpo $(DEPDIR)/box_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='box_fuzzer-heif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc

box_fuzzer-heif.obj: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif.Tpo -c -o box_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif.Tpo $(DEPDIR)/box_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='box_fuzzer-heif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`

box_fuzzer-heif_context.o: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_context.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_context.Tpo -c -o box_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_context.Tpo $(DEPDIR)/box_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='box_fuzzer-heif_context.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc

box_fuzzer-heif_context.obj: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_context.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_context.Tpo -c -o box_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_context.Tpo $(DEPDIR)/box_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='box_fuzzer-heif_context.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`

box_fuzzer-heif_hevc.o: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_hevc.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_hevc.Tpo -c -o box_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_hevc.Tpo $(DEPDIR)/box_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='box_fuzzer-heif_hevc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc

box_fuzzer-heif_hevc.obj: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_hevc.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_hevc.Tpo -c -o box_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_hevc.Tpo $(DEPDIR)/box_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='box_fuzzer-heif_hevc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`

box_fuzzer-heif_avif.o: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_avif.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_avif.Tpo -c -o box_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_avif.Tpo $(DEPDIR)/box_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='box_fuzzer-heif_avif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc

box_fuzzer-heif_avif.obj: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_avif.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_avif.Tpo -c -o box_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_avif.Tpo $(DEPDIR)/box_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='box_fuzzer-heif_avif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`

box_fuzzer-heif_plugin_registry.o: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_plugin_registry.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_plugin_registry.Tpo -c -o box_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/box_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='box_fuzzer-heif_plugin_registry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc

box_fuzzer-heif_plugin_registry.obj: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_plugin_registry.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_plugin_registry.Tpo -c -o box_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/box_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='box_fuzzer-heif_plugin_registry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`

box_fuzzer-heif_plugin.o: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_plugin.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_plugin.Tpo -c -o box_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_plugin.Tpo $(DEPDIR)/box_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='box_fuzzer-heif_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc

box_fuzzer-heif_plugin.obj: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_plugin.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_plugin.Tpo -c -o box_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_plugin.Tpo $(DEPDIR)/box_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='box_fuzzer-heif_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`

box_fuzzer-heif_colorconversion.o: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_colorconversion.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_colorconversion.Tpo -c -o box_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/box_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='box_fuzzer-heif_colorconversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc

box_fuzzer-heif_colorconversion.obj: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_colorconversion.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_colorconversion.Tpo -c -o box_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/box_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='box_fuzzer-heif_colorconversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`

box_fuzzer-heif_encoder_aom.o: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_encoder_aom.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_encoder_aom.Tpo -c -o box_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/box_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='box_fuzzer-heif_encoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc

box_fuzzer-heif_encoder_aom.obj: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_encoder_aom.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_encoder_aom.Tpo -c -o box_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/box_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='box_fuzzer-heif_encoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`

box_fuzzer-heif_decoder_aom.o: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_decoder_aom.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_decoder_aom.Tpo -c -o box_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/box_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='box_fuzzer-heif_decoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc

box_fuzzer-heif_decoder_aom.obj: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_decoder_aom.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_decoder_aom.Tpo -c -o box_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/box_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='box_fuzzer-heif_decoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`

box_fuzzer-heif_decoder_libde265.o: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_decoder_libde265.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Tpo -c -o box_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='box_fuzzer-heif_decoder_libde265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc

box_fuzzer-heif_decoder_libde265.obj: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_decoder_libde265.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Tpo -c -o box_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/box_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='box_fuzzer-heif_decoder_libde265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`

box_fuzzer-heif_encoder_x265.o: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_encoder_x265.o -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_encoder_x265.Tpo -c -o box_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/box_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='box_fuzzer-heif_encoder_x265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc

box_fuzzer-heif_encoder_x265.obj: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-heif_encoder_x265.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-heif_encoder_x265.Tpo -c -o box_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/box_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='box_fuzzer-heif_encoder_x265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`

box_fuzzer-box_fuzzer.o: box_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-box_fuzzer.o -MD -MP -MF $(DEPDIR)/box_fuzzer-box_fuzzer.Tpo -c -o box_fuzzer-box_fuzzer.o `test -f 'box_fuzzer.cc' || echo '$(srcdir)/'`box_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-box_fuzzer.Tpo $(DEPDIR)/box_fuzzer-box_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box_fuzzer.cc' object='box_fuzzer-box_fuzzer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-box_fuzzer.o `test -f 'box_fuzzer.cc' || echo '$(srcdir)/'`box_fuzzer.cc

box_fuzzer-box_fuzzer.obj: box_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT box_fuzzer-box_fuzzer.obj -MD -MP -MF $(DEPDIR)/box_fuzzer-box_fuzzer.Tpo -c -o box_fuzzer-box_fuzzer.obj `if test -f 'box_fuzzer.cc'; then $(CYGPATH_W) 'box_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/box_fuzzer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/box_fuzzer-box_fuzzer.Tpo $(DEPDIR)/box_fuzzer-box_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box_fuzzer.cc' object='box_fuzzer-box_fuzzer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(box_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o box_fuzzer-box_fuzzer.obj `if test -f 'box_fuzzer.cc'; then $(CYGPATH_W) 'box_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/box_fuzzer.cc'; fi`

color_conversion_fuzzer-bitstream.o: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-bitstream.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-bitstream.Tpo -c -o color_conversion_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-bitstream.Tpo $(DEPDIR)/color_conversion_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='color_conversion_fuzzer-bitstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc

color_conversion_fuzzer-bitstream.obj: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-bitstream.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-bitstream.Tpo -c -o color_conversion_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-bitstream.Tpo $(DEPDIR)/color_conversion_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='color_conversion_fuzzer-bitstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`

color_conversion_fuzzer-box.o: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-box.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-box.Tpo -c -o color_conversion_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-box.Tpo $(DEPDIR)/color_conversion_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='color_conversion_fuzzer-box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc

color_conversion_fuzzer-box.obj: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-box.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-box.Tpo -c -o color_conversion_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-box.Tpo $(DEPDIR)/color_conversion_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='color_conversion_fuzzer-box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`

color_conversion_fuzzer-error.o: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-error.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-error.Tpo -c -o color_conversion_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-error.Tpo $(DEPDIR)/color_conversion_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='color_conversion_fuzzer-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc

color_conversion_fuzzer-error.obj: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-error.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-error.Tpo -c -o color_conversion_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-error.Tpo $(DEPDIR)/color_conversion_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='color_conversion_fuzzer-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`

color_conversion_fuzzer-heif_file.o: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_file.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_file.Tpo -c -o color_conversion_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_file.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='color_conversion_fuzzer-heif_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc

color_conversion_fuzzer-heif_file.obj: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_file.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_file.Tpo -c -o color_conversion_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_file.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='color_conversion_fuzzer-heif_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`

color_conversion_fuzzer-heif_image.o: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_image.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_image.Tpo -c -o color_conversion_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_image.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='color_conversion_fuzzer-heif_image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc

color_conversion_fuzzer-heif_image.obj: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_image.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_image.Tpo -c -o color_conversion_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_image.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='color_conversion_fuzzer-heif_image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`

color_conversion_fuzzer-heif.o: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif.Tpo -c -o color_conversion_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif.Tpo $(DEPDIR)/color_conversion_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='color_conversion_fuzzer-heif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc

color_conversion_fuzzer-heif.obj: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif.Tpo -c -o color_conversion_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif.Tpo $(DEPDIR)/color_conversion_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='color_conversion_fuzzer-heif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`

color_conversion_fuzzer-heif_context.o: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_context.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_context.Tpo -c -o color_conversion_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_context.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='color_conversion_fuzzer-heif_context.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc

color_conversion_fuzzer-heif_context.obj: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_context.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_context.Tpo -c -o color_conversion_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_context.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='color_conversion_fuzzer-heif_context.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`

color_conversion_fuzzer-heif_hevc.o: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_hevc.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Tpo -c -o color_conversion_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='color_conversion_fuzzer-heif_hevc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc

color_conversion_fuzzer-heif_hevc.obj: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_hevc.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Tpo -c -o color_conversion_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='color_conversion_fuzzer-heif_hevc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`

color_conversion_fuzzer-heif_avif.o: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_avif.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_avif.Tpo -c -o color_conversion_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_avif.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='color_conversion_fuzzer-heif_avif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc

color_conversion_fuzzer-heif_avif.obj: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_avif.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_avif.Tpo -c -o color_conversion_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_avif.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='color_conversion_fuzzer-heif_avif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`

color_conversion_fuzzer-heif_plugin_registry.o: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_plugin_registry.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Tpo -c -o color_conversion_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='color_conversion_fuzzer-heif_plugin_registry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc

color_conversion_fuzzer-heif_plugin_registry.obj: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_plugin_registry.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Tpo -c -o color_conversion_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='color_conversion_fuzzer-heif_plugin_registry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`

color_conversion_fuzzer-heif_plugin.o: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_plugin.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Tpo -c -o color_conversion_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='color_conversion_fuzzer-heif_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc

color_conversion_fuzzer-heif_plugin.obj: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_plugin.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Tpo -c -o color_conversion_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='color_conversion_fuzzer-heif_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`

color_conversion_fuzzer-heif_colorconversion.o: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_colorconversion.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Tpo -c -o color_conversion_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='color_conversion_fuzzer-heif_colorconversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc

color_conversion_fuzzer-heif_colorconversion.obj: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_colorconversion.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Tpo -c -o color_conversion_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='color_conversion_fuzzer-heif_colorconversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`

color_conversion_fuzzer-heif_encoder_aom.o: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_encoder_aom.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Tpo -c -o color_conversion_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='color_conversion_fuzzer-heif_encoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc

color_conversion_fuzzer-heif_encoder_aom.obj: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_encoder_aom.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Tpo -c -o color_conversion_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='color_conversion_fuzzer-heif_encoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`

color_conversion_fuzzer-heif_decoder_aom.o: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_decoder_aom.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Tpo -c -o color_conversion_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='color_conversion_fuzzer-heif_decoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc

color_conversion_fuzzer-heif_decoder_aom.obj: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_decoder_aom.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Tpo -c -o color_conversion_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='color_conversion_fuzzer-heif_decoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`

color_conversion_fuzzer-heif_decoder_libde265.o: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_decoder_libde265.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Tpo -c -o color_conversion_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='color_conversion_fuzzer-heif_decoder_libde265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc

color_conversion_fuzzer-heif_decoder_libde265.obj: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_decoder_libde265.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Tpo -c -o color_conversion_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='color_conversion_fuzzer-heif_decoder_libde265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`

color_conversion_fuzzer-heif_encoder_x265.o: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_encoder_x265.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Tpo -c -o color_conversion_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='color_conversion_fuzzer-heif_encoder_x265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc

color_conversion_fuzzer-heif_encoder_x265.obj: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-heif_encoder_x265.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Tpo -c -o color_conversion_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/color_conversion_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='color_conversion_fuzzer-heif_encoder_x265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`

color_conversion_fuzzer-color_conversion_fuzzer.o: color_conversion_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-color_conversion_fuzzer.o -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Tpo -c -o color_conversion_fuzzer-color_conversion_fuzzer.o `test -f 'color_conversion_fuzzer.cc' || echo '$(srcdir)/'`color_conversion_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Tpo $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='color_conversion_fuzzer.cc' object='color_conversion_fuzzer-color_conversion_fuzzer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-color_conversion_fuzzer.o `test -f 'color_conversion_fuzzer.cc' || echo '$(srcdir)/'`color_conversion_fuzzer.cc

color_conversion_fuzzer-color_conversion_fuzzer.obj: color_conversion_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT color_conversion_fuzzer-color_conversion_fuzzer.obj -MD -MP -MF $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Tpo -c -o color_conversion_fuzzer-color_conversion_fuzzer.obj `if test -f 'color_conversion_fuzzer.cc'; then $(CYGPATH_W) 'color_conversion_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/color_conversion_fuzzer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Tpo $(DEPDIR)/color_conversion_fuzzer-color_conversion_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='color_conversion_fuzzer.cc' object='color_conversion_fuzzer-color_conversion_fuzzer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(color_conversion_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o color_conversion_fuzzer-color_conversion_fuzzer.obj `if test -f 'color_conversion_fuzzer.cc'; then $(CYGPATH_W) 'color_conversion_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/color_conversion_fuzzer.cc'; fi`

encoder_fuzzer-bitstream.o: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-bitstream.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-bitstream.Tpo -c -o encoder_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-bitstream.Tpo $(DEPDIR)/encoder_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='encoder_fuzzer-bitstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc

encoder_fuzzer-bitstream.obj: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-bitstream.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-bitstream.Tpo -c -o encoder_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-bitstream.Tpo $(DEPDIR)/encoder_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='encoder_fuzzer-bitstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`

encoder_fuzzer-box.o: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-box.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-box.Tpo -c -o encoder_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-box.Tpo $(DEPDIR)/encoder_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='encoder_fuzzer-box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc

encoder_fuzzer-box.obj: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-box.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-box.Tpo -c -o encoder_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-box.Tpo $(DEPDIR)/encoder_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='encoder_fuzzer-box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`

encoder_fuzzer-error.o: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-error.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-error.Tpo -c -o encoder_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-error.Tpo $(DEPDIR)/encoder_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='encoder_fuzzer-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc

encoder_fuzzer-error.obj: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-error.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-error.Tpo -c -o encoder_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-error.Tpo $(DEPDIR)/encoder_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='encoder_fuzzer-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`

encoder_fuzzer-heif_file.o: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_file.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_file.Tpo -c -o encoder_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_file.Tpo $(DEPDIR)/encoder_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='encoder_fuzzer-heif_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc

encoder_fuzzer-heif_file.obj: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_file.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_file.Tpo -c -o encoder_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_file.Tpo $(DEPDIR)/encoder_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='encoder_fuzzer-heif_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`

encoder_fuzzer-heif_image.o: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_image.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_image.Tpo -c -o encoder_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_image.Tpo $(DEPDIR)/encoder_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='encoder_fuzzer-heif_image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc

encoder_fuzzer-heif_image.obj: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_image.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_image.Tpo -c -o encoder_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_image.Tpo $(DEPDIR)/encoder_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='encoder_fuzzer-heif_image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`

encoder_fuzzer-heif.o: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif.Tpo -c -o encoder_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif.Tpo $(DEPDIR)/encoder_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='encoder_fuzzer-heif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc

encoder_fuzzer-heif.obj: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif.Tpo -c -o encoder_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif.Tpo $(DEPDIR)/encoder_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='encoder_fuzzer-heif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`

encoder_fuzzer-heif_context.o: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_context.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_context.Tpo -c -o encoder_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_context.Tpo $(DEPDIR)/encoder_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='encoder_fuzzer-heif_context.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc

encoder_fuzzer-heif_context.obj: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_context.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_context.Tpo -c -o encoder_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_context.Tpo $(DEPDIR)/encoder_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='encoder_fuzzer-heif_context.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`

encoder_fuzzer-heif_hevc.o: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_hevc.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_hevc.Tpo -c -o encoder_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_hevc.Tpo $(DEPDIR)/encoder_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='encoder_fuzzer-heif_hevc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc

encoder_fuzzer-heif_hevc.obj: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_hevc.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_hevc.Tpo -c -o encoder_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_hevc.Tpo $(DEPDIR)/encoder_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='encoder_fuzzer-heif_hevc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`

encoder_fuzzer-heif_avif.o: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_avif.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_avif.Tpo -c -o encoder_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_avif.Tpo $(DEPDIR)/encoder_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='encoder_fuzzer-heif_avif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc

encoder_fuzzer-heif_avif.obj: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_avif.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_avif.Tpo -c -o encoder_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_avif.Tpo $(DEPDIR)/encoder_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='encoder_fuzzer-heif_avif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`

encoder_fuzzer-heif_plugin_registry.o: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_plugin_registry.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Tpo -c -o encoder_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='encoder_fuzzer-heif_plugin_registry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc

encoder_fuzzer-heif_plugin_registry.obj: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_plugin_registry.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Tpo -c -o encoder_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/encoder_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='encoder_fuzzer-heif_plugin_registry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`

encoder_fuzzer-heif_plugin.o: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_plugin.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_plugin.Tpo -c -o encoder_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_plugin.Tpo $(DEPDIR)/encoder_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='encoder_fuzzer-heif_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc

encoder_fuzzer-heif_plugin.obj: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_plugin.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_plugin.Tpo -c -o encoder_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_plugin.Tpo $(DEPDIR)/encoder_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='encoder_fuzzer-heif_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`

encoder_fuzzer-heif_colorconversion.o: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_colorconversion.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Tpo -c -o encoder_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='encoder_fuzzer-heif_colorconversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc

encoder_fuzzer-heif_colorconversion.obj: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_colorconversion.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Tpo -c -o encoder_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/encoder_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='encoder_fuzzer-heif_colorconversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`

encoder_fuzzer-heif_encoder_aom.o: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_encoder_aom.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Tpo -c -o encoder_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='encoder_fuzzer-heif_encoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc

encoder_fuzzer-heif_encoder_aom.obj: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_encoder_aom.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Tpo -c -o encoder_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/encoder_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='encoder_fuzzer-heif_encoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`

encoder_fuzzer-heif_decoder_aom.o: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_decoder_aom.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Tpo -c -o encoder_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='encoder_fuzzer-heif_decoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc

encoder_fuzzer-heif_decoder_aom.obj: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_decoder_aom.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Tpo -c -o encoder_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/encoder_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='encoder_fuzzer-heif_decoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`

encoder_fuzzer-heif_decoder_libde265.o: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_decoder_libde265.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Tpo -c -o encoder_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='encoder_fuzzer-heif_decoder_libde265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc

encoder_fuzzer-heif_decoder_libde265.obj: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_decoder_libde265.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Tpo -c -o encoder_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/encoder_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='encoder_fuzzer-heif_decoder_libde265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`

encoder_fuzzer-heif_encoder_x265.o: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_encoder_x265.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Tpo -c -o encoder_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='encoder_fuzzer-heif_encoder_x265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc

encoder_fuzzer-heif_encoder_x265.obj: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-heif_encoder_x265.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Tpo -c -o encoder_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/encoder_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='encoder_fuzzer-heif_encoder_x265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`

encoder_fuzzer-encoder_fuzzer.o: encoder_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-encoder_fuzzer.o -MD -MP -MF $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Tpo -c -o encoder_fuzzer-encoder_fuzzer.o `test -f 'encoder_fuzzer.cc' || echo '$(srcdir)/'`encoder_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Tpo $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='encoder_fuzzer.cc' object='encoder_fuzzer-encoder_fuzzer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-encoder_fuzzer.o `test -f 'encoder_fuzzer.cc' || echo '$(srcdir)/'`encoder_fuzzer.cc

encoder_fuzzer-encoder_fuzzer.obj: encoder_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT encoder_fuzzer-encoder_fuzzer.obj -MD -MP -MF $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Tpo -c -o encoder_fuzzer-encoder_fuzzer.obj `if test -f 'encoder_fuzzer.cc'; then $(CYGPATH_W) 'encoder_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/encoder_fuzzer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Tpo $(DEPDIR)/encoder_fuzzer-encoder_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='encoder_fuzzer.cc' object='encoder_fuzzer-encoder_fuzzer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(encoder_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o encoder_fuzzer-encoder_fuzzer.obj `if test -f 'encoder_fuzzer.cc'; then $(CYGPATH_W) 'encoder_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/encoder_fuzzer.cc'; fi`

file_fuzzer-bitstream.o: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-bitstream.o -MD -MP -MF $(DEPDIR)/file_fuzzer-bitstream.Tpo -c -o file_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-bitstream.Tpo $(DEPDIR)/file_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='file_fuzzer-bitstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-bitstream.o `test -f 'bitstream.cc' || echo '$(srcdir)/'`bitstream.cc

file_fuzzer-bitstream.obj: bitstream.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-bitstream.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-bitstream.Tpo -c -o file_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-bitstream.Tpo $(DEPDIR)/file_fuzzer-bitstream.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bitstream.cc' object='file_fuzzer-bitstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-bitstream.obj `if test -f 'bitstream.cc'; then $(CYGPATH_W) 'bitstream.cc'; else $(CYGPATH_W) '$(srcdir)/bitstream.cc'; fi`

file_fuzzer-box.o: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-box.o -MD -MP -MF $(DEPDIR)/file_fuzzer-box.Tpo -c -o file_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-box.Tpo $(DEPDIR)/file_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='file_fuzzer-box.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-box.o `test -f 'box.cc' || echo '$(srcdir)/'`box.cc

file_fuzzer-box.obj: box.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-box.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-box.Tpo -c -o file_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-box.Tpo $(DEPDIR)/file_fuzzer-box.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='box.cc' object='file_fuzzer-box.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-box.obj `if test -f 'box.cc'; then $(CYGPATH_W) 'box.cc'; else $(CYGPATH_W) '$(srcdir)/box.cc'; fi`

file_fuzzer-error.o: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-error.o -MD -MP -MF $(DEPDIR)/file_fuzzer-error.Tpo -c -o file_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-error.Tpo $(DEPDIR)/file_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='file_fuzzer-error.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-error.o `test -f 'error.cc' || echo '$(srcdir)/'`error.cc

file_fuzzer-error.obj: error.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-error.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-error.Tpo -c -o file_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-error.Tpo $(DEPDIR)/file_fuzzer-error.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='error.cc' object='file_fuzzer-error.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-error.obj `if test -f 'error.cc'; then $(CYGPATH_W) 'error.cc'; else $(CYGPATH_W) '$(srcdir)/error.cc'; fi`

file_fuzzer-heif_file.o: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_file.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_file.Tpo -c -o file_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_file.Tpo $(DEPDIR)/file_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='file_fuzzer-heif_file.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_file.o `test -f 'heif_file.cc' || echo '$(srcdir)/'`heif_file.cc

file_fuzzer-heif_file.obj: heif_file.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_file.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_file.Tpo -c -o file_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_file.Tpo $(DEPDIR)/file_fuzzer-heif_file.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_file.cc' object='file_fuzzer-heif_file.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_file.obj `if test -f 'heif_file.cc'; then $(CYGPATH_W) 'heif_file.cc'; else $(CYGPATH_W) '$(srcdir)/heif_file.cc'; fi`

file_fuzzer-heif_image.o: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_image.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_image.Tpo -c -o file_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_image.Tpo $(DEPDIR)/file_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='file_fuzzer-heif_image.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_image.o `test -f 'heif_image.cc' || echo '$(srcdir)/'`heif_image.cc

file_fuzzer-heif_image.obj: heif_image.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_image.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_image.Tpo -c -o file_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_image.Tpo $(DEPDIR)/file_fuzzer-heif_image.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_image.cc' object='file_fuzzer-heif_image.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_image.obj `if test -f 'heif_image.cc'; then $(CYGPATH_W) 'heif_image.cc'; else $(CYGPATH_W) '$(srcdir)/heif_image.cc'; fi`

file_fuzzer-heif.o: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif.Tpo -c -o file_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif.Tpo $(DEPDIR)/file_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='file_fuzzer-heif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif.o `test -f 'heif.cc' || echo '$(srcdir)/'`heif.cc

file_fuzzer-heif.obj: heif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif.Tpo -c -o file_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif.Tpo $(DEPDIR)/file_fuzzer-heif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif.cc' object='file_fuzzer-heif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif.obj `if test -f 'heif.cc'; then $(CYGPATH_W) 'heif.cc'; else $(CYGPATH_W) '$(srcdir)/heif.cc'; fi`

file_fuzzer-heif_context.o: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_context.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_context.Tpo -c -o file_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_context.Tpo $(DEPDIR)/file_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='file_fuzzer-heif_context.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_context.o `test -f 'heif_context.cc' || echo '$(srcdir)/'`heif_context.cc

file_fuzzer-heif_context.obj: heif_context.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_context.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_context.Tpo -c -o file_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_context.Tpo $(DEPDIR)/file_fuzzer-heif_context.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_context.cc' object='file_fuzzer-heif_context.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_context.obj `if test -f 'heif_context.cc'; then $(CYGPATH_W) 'heif_context.cc'; else $(CYGPATH_W) '$(srcdir)/heif_context.cc'; fi`

file_fuzzer-heif_hevc.o: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_hevc.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_hevc.Tpo -c -o file_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_hevc.Tpo $(DEPDIR)/file_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='file_fuzzer-heif_hevc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_hevc.o `test -f 'heif_hevc.cc' || echo '$(srcdir)/'`heif_hevc.cc

file_fuzzer-heif_hevc.obj: heif_hevc.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_hevc.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_hevc.Tpo -c -o file_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_hevc.Tpo $(DEPDIR)/file_fuzzer-heif_hevc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_hevc.cc' object='file_fuzzer-heif_hevc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_hevc.obj `if test -f 'heif_hevc.cc'; then $(CYGPATH_W) 'heif_hevc.cc'; else $(CYGPATH_W) '$(srcdir)/heif_hevc.cc'; fi`

file_fuzzer-heif_avif.o: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_avif.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_avif.Tpo -c -o file_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_avif.Tpo $(DEPDIR)/file_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='file_fuzzer-heif_avif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_avif.o `test -f 'heif_avif.cc' || echo '$(srcdir)/'`heif_avif.cc

file_fuzzer-heif_avif.obj: heif_avif.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_avif.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_avif.Tpo -c -o file_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_avif.Tpo $(DEPDIR)/file_fuzzer-heif_avif.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_avif.cc' object='file_fuzzer-heif_avif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_avif.obj `if test -f 'heif_avif.cc'; then $(CYGPATH_W) 'heif_avif.cc'; else $(CYGPATH_W) '$(srcdir)/heif_avif.cc'; fi`

file_fuzzer-heif_plugin_registry.o: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_plugin_registry.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_plugin_registry.Tpo -c -o file_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/file_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='file_fuzzer-heif_plugin_registry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_plugin_registry.o `test -f 'heif_plugin_registry.cc' || echo '$(srcdir)/'`heif_plugin_registry.cc

file_fuzzer-heif_plugin_registry.obj: heif_plugin_registry.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_plugin_registry.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_plugin_registry.Tpo -c -o file_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_plugin_registry.Tpo $(DEPDIR)/file_fuzzer-heif_plugin_registry.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin_registry.cc' object='file_fuzzer-heif_plugin_registry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_plugin_registry.obj `if test -f 'heif_plugin_registry.cc'; then $(CYGPATH_W) 'heif_plugin_registry.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin_registry.cc'; fi`

file_fuzzer-heif_plugin.o: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_plugin.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_plugin.Tpo -c -o file_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_plugin.Tpo $(DEPDIR)/file_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='file_fuzzer-heif_plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_plugin.o `test -f 'heif_plugin.cc' || echo '$(srcdir)/'`heif_plugin.cc

file_fuzzer-heif_plugin.obj: heif_plugin.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_plugin.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_plugin.Tpo -c -o file_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_plugin.Tpo $(DEPDIR)/file_fuzzer-heif_plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_plugin.cc' object='file_fuzzer-heif_plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_plugin.obj `if test -f 'heif_plugin.cc'; then $(CYGPATH_W) 'heif_plugin.cc'; else $(CYGPATH_W) '$(srcdir)/heif_plugin.cc'; fi`

file_fuzzer-heif_colorconversion.o: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_colorconversion.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_colorconversion.Tpo -c -o file_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/file_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='file_fuzzer-heif_colorconversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_colorconversion.o `test -f 'heif_colorconversion.cc' || echo '$(srcdir)/'`heif_colorconversion.cc

file_fuzzer-heif_colorconversion.obj: heif_colorconversion.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_colorconversion.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_colorconversion.Tpo -c -o file_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_colorconversion.Tpo $(DEPDIR)/file_fuzzer-heif_colorconversion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_colorconversion.cc' object='file_fuzzer-heif_colorconversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_colorconversion.obj `if test -f 'heif_colorconversion.cc'; then $(CYGPATH_W) 'heif_colorconversion.cc'; else $(CYGPATH_W) '$(srcdir)/heif_colorconversion.cc'; fi`

file_fuzzer-heif_encoder_aom.o: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_encoder_aom.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_encoder_aom.Tpo -c -o file_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/file_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='file_fuzzer-heif_encoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_encoder_aom.o `test -f 'heif_encoder_aom.cc' || echo '$(srcdir)/'`heif_encoder_aom.cc

file_fuzzer-heif_encoder_aom.obj: heif_encoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_encoder_aom.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_encoder_aom.Tpo -c -o file_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_encoder_aom.Tpo $(DEPDIR)/file_fuzzer-heif_encoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_aom.cc' object='file_fuzzer-heif_encoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_encoder_aom.obj `if test -f 'heif_encoder_aom.cc'; then $(CYGPATH_W) 'heif_encoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_aom.cc'; fi`

file_fuzzer-heif_decoder_aom.o: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_decoder_aom.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_decoder_aom.Tpo -c -o file_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/file_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='file_fuzzer-heif_decoder_aom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_decoder_aom.o `test -f 'heif_decoder_aom.cc' || echo '$(srcdir)/'`heif_decoder_aom.cc

file_fuzzer-heif_decoder_aom.obj: heif_decoder_aom.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_decoder_aom.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_decoder_aom.Tpo -c -o file_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_decoder_aom.Tpo $(DEPDIR)/file_fuzzer-heif_decoder_aom.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_aom.cc' object='file_fuzzer-heif_decoder_aom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_decoder_aom.obj `if test -f 'heif_decoder_aom.cc'; then $(CYGPATH_W) 'heif_decoder_aom.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_aom.cc'; fi`

file_fuzzer-heif_decoder_libde265.o: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_decoder_libde265.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Tpo -c -o file_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='file_fuzzer-heif_decoder_libde265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_decoder_libde265.o `test -f 'heif_decoder_libde265.cc' || echo '$(srcdir)/'`heif_decoder_libde265.cc

file_fuzzer-heif_decoder_libde265.obj: heif_decoder_libde265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_decoder_libde265.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Tpo -c -o file_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Tpo $(DEPDIR)/file_fuzzer-heif_decoder_libde265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_decoder_libde265.cc' object='file_fuzzer-heif_decoder_libde265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_decoder_libde265.obj `if test -f 'heif_decoder_libde265.cc'; then $(CYGPATH_W) 'heif_decoder_libde265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_decoder_libde265.cc'; fi`

file_fuzzer-heif_encoder_x265.o: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_encoder_x265.o -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_encoder_x265.Tpo -c -o file_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/file_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='file_fuzzer-heif_encoder_x265.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_encoder_x265.o `test -f 'heif_encoder_x265.cc' || echo '$(srcdir)/'`heif_encoder_x265.cc

file_fuzzer-heif_encoder_x265.obj: heif_encoder_x265.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-heif_encoder_x265.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-heif_encoder_x265.Tpo -c -o file_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-heif_encoder_x265.Tpo $(DEPDIR)/file_fuzzer-heif_encoder_x265.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='heif_encoder_x265.cc' object='file_fuzzer-heif_encoder_x265.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-heif_encoder_x265.obj `if test -f 'heif_encoder_x265.cc'; then $(CYGPATH_W) 'heif_encoder_x265.cc'; else $(CYGPATH_W) '$(srcdir)/heif_encoder_x265.cc'; fi`

file_fuzzer-file_fuzzer.o: file_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-file_fuzzer.o -MD -MP -MF $(DEPDIR)/file_fuzzer-file_fuzzer.Tpo -c -o file_fuzzer-file_fuzzer.o `test -f 'file_fuzzer.cc' || echo '$(srcdir)/'`file_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-file_fuzzer.Tpo $(DEPDIR)/file_fuzzer-file_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_fuzzer.cc' object='file_fuzzer-file_fuzzer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-file_fuzzer.o `test -f 'file_fuzzer.cc' || echo '$(srcdir)/'`file_fuzzer.cc

file_fuzzer-file_fuzzer.obj: file_fuzzer.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -MT file_fuzzer-file_fuzzer.obj -MD -MP -MF $(DEPDIR)/file_fuzzer-file_fuzzer.Tpo -c -o file_fuzzer-file_fuzzer.obj `if test -f 'file_fuzzer.cc'; then $(CYGPATH_W) 'file_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/file_fuzzer.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/file_fuzzer-file_fuzzer.Tpo $(DEPDIR)/file_fuzzer-file_fuzzer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='file_fuzzer.cc' object='file_fuzzer-file_fuzzer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(file_fuzzer_CXXFLAGS) $(CXXFLAGS) -c -o file_fuzzer-file_fuzzer.obj `if test -f 'file_fuzzer.cc'; then $(CYGPATH_W) 'file_fuzzer.cc'; else $(CYGPATH_W) '$(srcdir)/file_fuzzer.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libheif_laHEADERS: $(libheif_la_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libheif_la_HEADERS)'; test -n "$(libheif_ladir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libheif_ladir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libheif_ladir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libheif_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libheif_ladir)" || exit $$?; \
	done

uninstall-libheif_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libheif_la_HEADERS)'; test -n "$(libheif_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libheif_ladir)'; $(am__uninstall_files_from_dir)
format-local: 
test-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libheif_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

format: format-am

format-am: format-local

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libheif_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

test: test-am

test-am: test-local

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libheif_laHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am format-am \
	format-local html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libheif_laHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am test-am test-local uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-libheif_laHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
