From 2b155ec88a9204eeac9df54d6c27fbdf12929090 Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Wed, 21 Dec 2022 23:23:25 +0700
Subject: [PATCH 2/3] Revert "Enable wide chars for all Windows"

This reverts commit 0d7c5a181905eeb6b5bc2c8f91012a2abb0c5bfc.
---
 libheif/api/libheif/heif.cc | 2 +-
 libheif/file.cc             | 8 ++++----
 libheif/file.h              | 2 +-
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/libheif/api/libheif/heif.cc b/libheif/api/libheif/heif.cc
index 0ff1afa3..d3e2f30e 100644
--- a/libheif/api/libheif/heif.cc
+++ b/libheif/api/libheif/heif.cc
@@ -2623,7 +2623,7 @@ static struct heif_error heif_file_writer_write(struct heif_context* ctx,
 {
   const char* filename = static_cast<const char*>(userdata);
 
-#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
+#ifdef _MSC_VER
   std::ofstream ostr(HeifFile::convert_utf8_path_to_utf16(filename).c_str(), std::ios_base::binary);
 #else
   std::ofstream ostr(filename, std::ios_base::binary);
diff --git a/libheif/file.cc b/libheif/file.cc
index 8a678bf9..4e2ab69c 100644
--- a/libheif/file.cc
+++ b/libheif/file.cc
@@ -39,13 +39,13 @@
 #include <cassert>
 #include <algorithm>
 
-#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
+#ifdef _MSC_VER
 
 #ifndef NOMINMAX
 #define NOMINMAX 1
 #endif
 
-#include <windows.h>
+#include <Windows.h>
 #endif
 
 
@@ -100,7 +100,7 @@ std::shared_ptr<Box_infe> HeifFile::get_infe_box(heif_item_id ID)
 
 Error HeifFile::read_from_file(const char* input_filename)
 {
-#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
+#ifdef _MSC_VER
   auto input_stream_istr = std::unique_ptr<std::istream>(new std::ifstream(convert_utf8_path_to_utf16(input_filename).c_str(), std::ios_base::binary));
 #else
   auto input_stream_istr = std::unique_ptr<std::istream>(new std::ifstream(input_filename, std::ios_base::binary));
@@ -1172,7 +1172,7 @@ void HeifFile::set_auxC_property(heif_item_id id, const std::string& type)
   m_ipma_box->add_property_for_item_ID(id, Box_ipma::PropertyAssociation{true, uint16_t(index + 1)});
 }
 
-#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
+#ifdef _MSC_VER
 std::wstring HeifFile::convert_utf8_path_to_utf16(std::string str)
 {
   std::wstring ret;
diff --git a/libheif/file.h b/libheif/file.h
index 1a1585a4..7ce30ce3 100644
--- a/libheif/file.h
+++ b/libheif/file.h
@@ -210,7 +210,7 @@ public:
 
   void set_auxC_property(heif_item_id id, const std::string& type);
 
-#if defined(__MINGW32__) || defined(__MINGW64__) || defined(_MSC_VER)
+#ifdef _MSC_VER
   static std::wstring convert_utf8_path_to_utf16(std::string pathutf8);
 #endif
 
-- 
2.39.5

