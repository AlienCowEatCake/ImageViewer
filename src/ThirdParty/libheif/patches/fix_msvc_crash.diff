diff -Nur libheif-1.9.1_orig/libheif/heif_plugin_registry.cc libheif-1.9.1/libheif/heif_plugin_registry.cc
--- libheif-1.9.1_orig/libheif/heif_plugin_registry.cc	2020-09-23 19:23:52.000000000 +0700
+++ libheif-1.9.1/libheif/heif_plugin_registry.cc	2020-11-29 03:27:45.132060544 +0700
@@ -69,9 +69,15 @@
          encoder_descriptor_priority_order> s_encoder_descriptors;
 
 
-static class Register_Default_Plugins
+class Register_Default_Plugins
 {
 public:
+  static void ensure_registered()
+  {
+    static Register_Default_Plugins dummy;
+  }
+
+private:
   Register_Default_Plugins()
   {
 #if HAVE_LIBDE265
@@ -95,7 +101,7 @@
     heif::register_decoder(get_decoder_plugin_dav1d());
 #endif
   }
-} dummy;
+};
 
 
 void heif::register_decoder(const heif_decoder_plugin* decoder_plugin)
@@ -113,6 +119,7 @@
   int highest_priority = 0;
   const struct heif_decoder_plugin* best_plugin = nullptr;
 
+  Register_Default_Plugins::ensure_registered();
   for (const auto* plugin : s_decoder_plugins) {
     int priority = plugin->does_support_format(type);
     if (priority > highest_priority) {
@@ -155,6 +162,7 @@
 {
   std::vector<const struct heif_encoder_descriptor*> filtered_descriptors;
 
+  Register_Default_Plugins::ensure_registered();
   for (const auto& descr : s_encoder_descriptors) {
     const struct heif_encoder_plugin* plugin = descr->plugin;
 
