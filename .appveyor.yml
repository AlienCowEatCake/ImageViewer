version: '1.7.4-{branch}-{build}'
clone_depth: 5
shallow_clone: true
max_jobs: 1

init:
  - git config --global http.sslVerify false

environment:
  matrix:
    - job_name: macOS, Qt 5.15, x64, Testing
      job_group: macos_test
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      QTDIR: Qt/5.15/clang_64
    - job_name: macOS, Qt 6.5, x64, Testing
      job_group: macos_test
      APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma
      QTDIR: Qt/6.5/macos
    # - job_name: macOS, Qt 5.15, Universal
    #   job_group: macos_buildscript
    #   APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma
    #   QT_DIST: https://github.com/AlienCowEatCake/qtbase/releases/download/v5.15.17_osx-10.10/Qt_5.15.17_clang_universal_target10.10.tar.bz2
    #   QT_HOME: Qt/5.15.17/clang_universal_target10.10
    #   BUILD_ID: osx_qt5.15_universal_target10.10
    # - job_name: macOS, Qt 6.8, Universal
    #   job_group: macos_buildscript
    #   APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma
    #   QT_DIST: https://github.com/AlienCowEatCake/qtbase/releases/download/v6.9.2/Qt_6.9.2_macos_target12.0.tar.bz2
    #   QT_HOME: Qt/6.9.2/macos_target12.0
    #   BUILD_ID: osx_qt6_universal
    - job_name: Windows, Qt 5.15, MSVC 2022 x86, Testing
      job_group: windows_test_msvc
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      VCVARS: C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat
      ARCH: x86
      QTDIR: C:\Qt\5.15\msvc2019
    - job_name: Windows, Qt 5.15, MSVC 2022 x64, Testing
      job_group: windows_test_msvc
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      VCVARS: C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat
      ARCH: x64
      QTDIR: C:\Qt\5.15\msvc2019_64
    - job_name: Windows, Qt 6.8, MSVC 2022 x64, Testing
      job_group: windows_test_msvc
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      VCVARS: C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsall.bat
      ARCH: x64
      QTDIR: C:\Qt\6.8\msvc2022_64
    - job_name: Windows, Qt 5.15, MinGW 8.1.0 x86, Testing
      job_group: windows_test_mingw
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      QTDIR: C:\Qt\5.15\mingw81_32
      MINGW_DIR: C:\Qt\Tools\mingw810_32
    # - job_name: Windows, Qt 5.15, MinGW 8.1.0 x64, Testing
    #   job_group: windows_test_mingw
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   QTDIR: C:\Qt\5.15\mingw81_64
    #   MINGW_DIR: C:\Qt\Tools\mingw810_64
    - job_name: Windows, Qt 6.8, MinGW 13.1.0 x64, Testing
      job_group: windows_test_mingw
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      QTDIR: C:\Qt\6.8\mingw_64
      MINGW_DIR: C:\Qt\Tools\mingw1310_64
    # - job_name: Windows, Qt 5.15, MSVC 2022 x86
    #   job_group: windows_buildscript_msvc
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   QT_PATH: C:\Qt\5.15\msvc2019
    #   OPENSSL_PATH: C:\OpenSSL-v111-Win32\bin
    #   BUILD_ID: win_qt5.15_msvc2022_x86
    # - job_name: Windows, Qt 5.15, MSVC 2022 x64
    #   job_group: windows_buildscript_msvc
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   QT_PATH: C:\Qt\5.15\msvc2019_64
    #   OPENSSL_PATH: C:\OpenSSL-v111-Win64\bin
    #   BUILD_ID: win_qt5.15_msvc2022_x64
    # - job_name: Windows, Qt 6.8, MSVC 2022 x64
    #   job_group: windows_buildscript_msvc
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
    #   QT_PATH: C:\Qt\6.8\msvc2022_64
    #   BUILD_ID: win_qt6_msvc2022_x64
    - job_name: GNU/Linux, Ubuntu 18.04, Qt 4.8, x64, Testing
      job_group: linux_test_qt4
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
    - job_name: GNU/Linux, Ubuntu 22.04, Qt 5.15, x64, Testing
      job_group: linux_test
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
      QTDIR: Qt/5.15/gcc_64
    - job_name: GNU/Linux, Ubuntu 22.04, Qt 6.5, x64, Testing
      job_group: linux_test
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
      QTDIR: Qt/6.5/gcc_64
    # - job_name: GNU/Linux, Qt 5.15, x64
    #   job_group: linux_buildscript
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
    #   BUILD_ID: docker_amd64_linux_qt5.15_clang
    # - job_name: GNU/Linux, Qt 6.9, x64
    #   job_group: linux_buildscript
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2204
    #   BUILD_ID: docker_amd64_linux_qt6_clang

for:
-
  matrix:
    only:
      - job_group: macos_test
  build_script:
    - export PATH="${HOME}/${QTDIR}/bin:${PATH}"
    - mkdir "${APPVEYOR_BUILD_FOLDER}/build"
    - cd "${APPVEYOR_BUILD_FOLDER}/build"
    - qmake -r CONFIG+=release CONFIG+="enable_librsvg enable_resvg disable_fallback_iccprofiles enable_update_checking" ..
    - make -j$(getconf _NPROCESSORS_ONLN)

-
  matrix:
    only:
      - job_group: macos_buildscript
  install:
    - sudo mkdir -p "/opt"
    - cd "/opt"
    - sudo curl "${QT_DIST}" --output "qt_dist" --location --insecure
    - sudo xattr -r -d com.apple.quarantine "qt_dist"
    - sudo tar -xpf "qt_dist"
    - sudo rm "qt_dist"
  build_script:
    - export ADHOC_SIGN=1
    - export QT_PATH="/opt/${QT_HOME}"
    - cd "${APPVEYOR_BUILD_FOLDER}"
    - "buildscripts/${BUILD_ID}.sh"
    - find "build_${BUILD_ID}/install" -mindepth 1 -maxdepth 1 -type d -name '*.app' -exec ditto -c -k --keepParent \{\} \{\}.zip \;
    - find "build_${BUILD_ID}/install" -mindepth 1 -maxdepth 1 -type f -name '*.zip' -exec mv \{\} "./" \;
    - find "build_${BUILD_ID}/artifacts" -mindepth 1 -maxdepth 1 -type f -exec mv \{\} "./" \;
    - rm -rf "build_${BUILD_ID}"
  artifacts:
    - path: '*.zip'
      type: zip
    - path: '*.dmg'
      type: file

-
  matrix:
    only:
      - job_group: windows_test_msvc
  build_script:
    - call "%QTDIR%\bin\qtenv2.bat"
    - call "%VCVARS%" %ARCH%
    - mkdir "%APPVEYOR_BUILD_FOLDER%\build"
    - cd "%APPVEYOR_BUILD_FOLDER%\build"
    - call "%QTDIR%\bin\qmake" -o "%APPVEYOR_BUILD_FOLDER%\build" -r CONFIG+=release CONFIG+="enable_librsvg enable_resvg disable_fallback_iccprofiles enable_update_checking" "%APPVEYOR_BUILD_FOLDER%"
    - call "%APPVEYOR_BUILD_FOLDER%\buildscripts\helpers\jom.exe" /J %NUMBER_OF_PROCESSORS%

-
  matrix:
    only:
      - job_group: windows_test_mingw
  build_script:
    - call "%QTDIR%\bin\qtenv2.bat"
    - set "PATH=%MINGW_DIR%\bin;%PATH%"
    - mkdir "%APPVEYOR_BUILD_FOLDER%\build"
    - cd "%APPVEYOR_BUILD_FOLDER%\build"
    - call "%QTDIR%\bin\qmake" -o "%APPVEYOR_BUILD_FOLDER%\build" -r CONFIG+=release CONFIG+="enable_librsvg enable_resvg disable_fallback_iccprofiles enable_update_checking" "%APPVEYOR_BUILD_FOLDER%"
    - call mingw32-make -j%NUMBER_OF_PROCESSORS%

-
  matrix:
    only:
      - job_group: windows_buildscript_msvc
  build_script:
    - call "%APPVEYOR_BUILD_FOLDER%\buildscripts\%BUILD_ID%.bat" <nul
  artifacts:
    - path: "*.zip"
      type: zip
    - path: "*.msi"
      type: file

-
  matrix:
    only:
      - job_group: linux_test_qt4
  install:
    - export DEBIAN_FRONTEND=noninteractive
    - sudo apt-get -o Acquire::Check-Valid-Until=false update --allow-releaseinfo-change || sudo apt-get -o Acquire::Check-Valid-Until=false update || true
    - sudo apt-get -o Acquire::Check-Valid-Until=false install --yes --allow-unauthenticated libqt4-dev qt4-default
  build_script:
    - mkdir "${APPVEYOR_BUILD_FOLDER}/build"
    - cd "${APPVEYOR_BUILD_FOLDER}/build"
    - qmake -r CONFIG+=release CONFIG+="enable_librsvg enable_resvg disable_fallback_iccprofiles enable_update_checking" ..
    - make -j$(getconf _NPROCESSORS_ONLN)

-
  matrix:
    only:
      - job_group: linux_test
  build_script:
    - export PATH="${HOME}/${QTDIR}/bin:${PATH}"
    - mkdir "${APPVEYOR_BUILD_FOLDER}/build"
    - cd "${APPVEYOR_BUILD_FOLDER}/build"
    - qmake -r CONFIG+=release CONFIG+="enable_librsvg enable_resvg disable_fallback_iccprofiles enable_update_checking" ..
    - make -j$(getconf _NPROCESSORS_ONLN)

-
  matrix:
    only:
      - job_group: linux_buildscript
  build_script:
    - "${APPVEYOR_BUILD_FOLDER}/buildscripts/${BUILD_ID}.sh"
  artifacts:
    - path: "*.deb"
      type: file
    - path: "*.AppImage"
      type: file

notifications:
  - provider: Email
    to:
      - peter.zhigalov@gmail.com
    on_build_status_changed: true
